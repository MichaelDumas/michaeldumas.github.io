"use strict";import{defaults,keep_name,mergeSort,push_uniq,make_node,return_false,return_this,return_true,string_template}from"./utils/index.js";import{AST_Arrow,AST_Block,AST_Call,AST_Catch,AST_Class,AST_Conditional,AST_DefClass,AST_Defun,AST_Destructuring,AST_Dot,AST_DotHash,AST_Export,AST_For,AST_ForIn,AST_Function,AST_Import,AST_IterationStatement,AST_Label,AST_LabeledStatement,AST_LabelRef,AST_Lambda,AST_LoopControl,AST_NameMapping,AST_Node,AST_Scope,AST_Sequence,AST_String,AST_Sub,AST_Switch,AST_SwitchBranch,AST_Symbol,AST_SymbolBlockDeclaration,AST_SymbolCatch,AST_SymbolClass,AST_SymbolConst,AST_SymbolDefClass,AST_SymbolDefun,AST_SymbolExport,AST_SymbolFunarg,AST_SymbolImport,AST_SymbolLambda,AST_SymbolLet,AST_SymbolMethod,AST_SymbolRef,AST_SymbolVar,AST_Toplevel,AST_VarDef,AST_With,TreeWalker,walk}from"./ast.js";import{ALL_RESERVED_WORDS,js_error}from"./parse.js";const MASK_EXPORT_DONT_MANGLE=1,MASK_EXPORT_WANT_MANGLE=2;let function_defs=null,unmangleable_names=null;class SymbolDef{constructor(e,n,t){this.name=n.name,this.orig=[n],this.init=t,this.eliminated=0,this.assignments=0,this.scope=e,this.replaced=0,this.global=!1,this.export=0,this.mangled_name=null,this.undeclared=!1,this.id=SymbolDef.next_id++,this.chained=!1,this.direct_access=!1,this.escaped=0,this.recursive_refs=0,this.references=[],this.should_replace=void 0,this.single_use=!1,this.fixed=!1,Object.seal(this)}fixed_value(){return!this.fixed||this.fixed instanceof AST_Node?this.fixed:this.fixed()}unmangleable(e){return e||(e={}),!!(function_defs&&function_defs.has(this.id)&&keep_name(e.keep_fnames,this.orig[0].name))||(this.global&&!e.toplevel||1&this.export||this.undeclared||!e.eval&&this.scope.pinned()||(this.orig[0]instanceof AST_SymbolLambda||this.orig[0]instanceof AST_SymbolDefun)&&keep_name(e.keep_fnames,this.orig[0].name)||this.orig[0]instanceof AST_SymbolMethod||(this.orig[0]instanceof AST_SymbolClass||this.orig[0]instanceof AST_SymbolDefClass)&&keep_name(e.keep_classnames,this.orig[0].name))}mangle(e){const n=e.cache&&e.cache.props;if(this.global&&n&&n.has(this.name))this.mangled_name=n.get(this.name);else if(!this.mangled_name&&!this.unmangleable(e)){var t=this.scope,a=this.orig[0];e.ie8&&a instanceof AST_SymbolLambda&&(t=t.parent_scope);const s=redefined_catch_def(this);this.mangled_name=s?s.mangled_name||s.name:t.next_mangled(e,this),this.global&&n&&n.set(this.name,this.mangled_name)}}}function redefined_catch_def(e){if(e.orig[0]instanceof AST_SymbolCatch&&e.scope.is_block_scope())return e.scope.get_defun_scope().variables.get(e.name)}function find_scopes_visible_from(e){const n=new Set;for(const t of new Set(e))!function e(t){null==t||n.has(t)||(n.add(t),e(t.parent_scope))}(t);return[...n]}function next_mangled(e,n){var t=e.enclosed,a=n.nth_identifier;e:for(;;){var s=a.get(++e.cname);if(!ALL_RESERVED_WORDS.has(s)&&!(n.reserved.has(s)||unmangleable_names&&unmangleable_names.has(s))){for(let e=t.length;--e>=0;){const a=t[e];if(s==(a.mangled_name||a.unmangleable(n)&&a.name))continue e}return s}}}SymbolDef.next_id=1,AST_Scope.DEFMETHOD("figure_out_scope",(function(e,{parent_scope:n=null,toplevel:t=this}={}){if(e=defaults(e,{cache:null,ie8:!1,safari10:!1}),!(t instanceof AST_Toplevel))throw new Error("Invalid toplevel scope");var a=this.parent_scope=n,s=new Map,o=null,i=null,r=[],l=new TreeWalker(((n,t)=>{if(n.is_block_scope()){const s=a;n.block_scope=a=new AST_Scope(n),a._block_scope=!0;const o=n instanceof AST_Catch?s.parent_scope:s;if(a.init_scope_vars(o),a.uses_with=s.uses_with,a.uses_eval=s.uses_eval,e.safari10&&(n instanceof AST_For||n instanceof AST_ForIn)&&r.push(a),n instanceof AST_Switch){const e=a;a=s,n.expression.walk(l),a=e;for(let e=0;e<n.body.length;e++)n.body[e].walk(l)}else t();return a=s,!0}if(n instanceof AST_Destructuring){const e=i;return i=n,t(),i=e,!0}if(n instanceof AST_Scope){n.init_scope_vars(a);var _=a,f=o,S=s;return o=a=n,s=new Map,t(),a=_,o=f,s=S,!0}if(n instanceof AST_LabeledStatement){var h=n.label;if(s.has(h.name))throw new Error(string_template("Label {name} defined twice",h));return s.set(h.name,h),t(),s.delete(h.name),!0}if(n instanceof AST_With)for(var p=a;p;p=p.parent_scope)p.uses_with=!0;else{if(n instanceof AST_Symbol&&(n.scope=a),n instanceof AST_Label&&(n.thedef=n,n.references=[]),n instanceof AST_SymbolLambda)o.def_function(n,"arguments"==n.name?void 0:o);else if(n instanceof AST_SymbolDefun){const e=o.parent_scope;n.scope=l.directives["use strict"]?e:e.get_defun_scope(),c(n.scope.def_function(n,o),1)}else if(n instanceof AST_SymbolClass)c(o.def_variable(n,o),1);else if(n instanceof AST_SymbolImport)a.def_variable(n);else if(n instanceof AST_SymbolDefClass)c((n.scope=o.parent_scope).def_function(n,o),1);else if(n instanceof AST_SymbolVar||n instanceof AST_SymbolLet||n instanceof AST_SymbolConst||n instanceof AST_SymbolCatch){if((u=n instanceof AST_SymbolBlockDeclaration?a.def_variable(n,null):o.def_variable(n,"SymbolVar"==n.TYPE?null:void 0)).orig.every((e=>e===n||(n instanceof AST_SymbolBlockDeclaration?e instanceof AST_SymbolLambda:!(e instanceof AST_SymbolLet||e instanceof AST_SymbolConst))))||js_error(`"${n.name}" is redeclared`,n.start.file,n.start.line,n.start.col,n.start.pos),n instanceof AST_SymbolFunarg||c(u,2),o!==a){n.mark_enclosed();var u=a.find_variable(n);n.thedef!==u&&(n.thedef=u,n.reference())}}else if(n instanceof AST_LabelRef){var m=s.get(n.name);if(!m)throw new Error(string_template("Undefined label {name} [{line},{col}]",{name:n.name,line:n.start.line,col:n.start.col}));n.thedef=m}a instanceof AST_Toplevel||!(n instanceof AST_Export||n instanceof AST_Import)||js_error(`"${n.TYPE}" statement may only appear at the top level`,n.start.file,n.start.line,n.start.col,n.start.pos)}}));function c(e,n){if(i){var t=0;do{n++}while(l.parent(t++)!==i)}var a=l.parent(n);if(e.export=a instanceof AST_Export?1:0){var s=a.exported_definition;(s instanceof AST_Defun||s instanceof AST_DefClass)&&a.is_default&&(e.export=2)}}this.walk(l);this instanceof AST_Toplevel&&(this.globals=new Map);l=new TreeWalker((e=>{if(e instanceof AST_LoopControl&&e.label)return e.label.thedef.references.push(e),!0;if(e instanceof AST_SymbolRef){var n,a=e.name;if("eval"==a&&l.parent()instanceof AST_Call)for(var s=e.scope;s&&!s.uses_eval;s=s.parent_scope)s.uses_eval=!0;return l.parent()instanceof AST_NameMapping&&l.parent(1).module_name||!(n=e.scope.find_variable(a))?(n=t.def_global(e),e instanceof AST_SymbolExport&&(n.export=1)):n.scope instanceof AST_Lambda&&"arguments"==a&&(n.scope.uses_arguments=!0),e.thedef=n,e.reference(),!e.scope.is_block_scope()||n.orig[0]instanceof AST_SymbolBlockDeclaration||(e.scope=e.scope.get_defun_scope()),!0}var o;if(e instanceof AST_SymbolCatch&&(o=redefined_catch_def(e.definition())))for(s=e.scope;s&&(push_uniq(s.enclosed,o),s!==o.scope);)s=s.parent_scope}));if(this.walk(l),(e.ie8||e.safari10)&&walk(this,(e=>{if(e instanceof AST_SymbolCatch){var n=e.name,a=e.thedef.references,s=e.scope.get_defun_scope(),o=s.find_variable(n)||t.globals.get(n)||s.def_variable(e);return a.forEach((function(e){e.thedef=o,e.reference()})),e.thedef=o,e.reference(),!0}})),e.safari10)for(const e of r)e.parent_scope.variables.forEach((function(n){push_uniq(e.enclosed,n)}))})),AST_Toplevel.DEFMETHOD("def_global",(function(e){var n=this.globals,t=e.name;if(n.has(t))return n.get(t);var a=new SymbolDef(this,e);return a.undeclared=!0,a.global=!0,n.set(t,a),a})),AST_Scope.DEFMETHOD("init_scope_vars",(function(e){this.variables=new Map,this.uses_with=!1,this.uses_eval=!1,this.parent_scope=e,this.enclosed=[],this.cname=-1})),AST_Scope.DEFMETHOD("conflicting_def",(function(e){return this.enclosed.find((n=>n.name===e))||this.variables.has(e)||this.parent_scope&&this.parent_scope.conflicting_def(e)})),AST_Scope.DEFMETHOD("conflicting_def_shallow",(function(e){return this.enclosed.find((n=>n.name===e))||this.variables.has(e)})),AST_Scope.DEFMETHOD("add_child_scope",(function(e){if(e.parent_scope===this)return;e.parent_scope=this;const n=(()=>{const e=[];let n=this;do{e.push(n)}while(n=n.parent_scope);return e.reverse(),e})(),t=new Set(e.enclosed),a=[];for(const e of n){a.forEach((n=>push_uniq(e.enclosed,n)));for(const n of e.variables.values())t.has(n)&&(push_uniq(a,n),push_uniq(e.enclosed,n))}})),AST_Scope.DEFMETHOD("create_symbol",(function(e,{source:n,tentative_name:t,scope:a,conflict_scopes:s=[a],init:o=null}={}){let i;if(s=find_scopes_visible_from(s),t){t=i=t.replace(/(?:^[^a-z_$]|[^a-z0-9_$])/gi,"_");let e=0;for(;s.find((e=>e.conflicting_def_shallow(i)));)i=t+"$"+e++}if(!i)throw new Error("No symbol name could be generated in create_symbol()");const r=make_node(e,n,{name:i,scope:a});return this.def_variable(r,o||null),r.mark_enclosed(),r})),AST_Node.DEFMETHOD("is_block_scope",return_false),AST_Class.DEFMETHOD("is_block_scope",return_false),AST_Lambda.DEFMETHOD("is_block_scope",return_false),AST_Toplevel.DEFMETHOD("is_block_scope",return_false),AST_SwitchBranch.DEFMETHOD("is_block_scope",return_false),AST_Block.DEFMETHOD("is_block_scope",return_true),AST_Scope.DEFMETHOD("is_block_scope",(function(){return this._block_scope||!1})),AST_IterationStatement.DEFMETHOD("is_block_scope",return_true),AST_Lambda.DEFMETHOD("init_scope_vars",(function(){AST_Scope.prototype.init_scope_vars.apply(this,arguments),this.uses_arguments=!1,this.def_variable(new AST_SymbolFunarg({name:"arguments",start:this.start,end:this.end}))})),AST_Arrow.DEFMETHOD("init_scope_vars",(function(){AST_Scope.prototype.init_scope_vars.apply(this,arguments),this.uses_arguments=!1})),AST_Symbol.DEFMETHOD("mark_enclosed",(function(){for(var e=this.definition(),n=this.scope;n&&(push_uniq(n.enclosed,e),n!==e.scope);)n=n.parent_scope})),AST_Symbol.DEFMETHOD("reference",(function(){this.definition().references.push(this),this.mark_enclosed()})),AST_Scope.DEFMETHOD("find_variable",(function(e){return e instanceof AST_Symbol&&(e=e.name),this.variables.get(e)||this.parent_scope&&this.parent_scope.find_variable(e)})),AST_Scope.DEFMETHOD("def_function",(function(e,n){var t=this.def_variable(e,n);return(!t.init||t.init instanceof AST_Defun)&&(t.init=n),t})),AST_Scope.DEFMETHOD("def_variable",(function(e,n){var t=this.variables.get(e.name);return t?(t.orig.push(e),t.init&&(t.scope!==e.scope||t.init instanceof AST_Function)&&(t.init=n)):(t=new SymbolDef(this,e,n),this.variables.set(e.name,t),t.global=!this.parent_scope),e.thedef=t})),AST_Scope.DEFMETHOD("next_mangled",(function(e){return next_mangled(this,e)})),AST_Toplevel.DEFMETHOD("next_mangled",(function(e){let n;const t=this.mangled_names;do{n=next_mangled(this,e)}while(t.has(n));return n})),AST_Function.DEFMETHOD("next_mangled",(function(e,n){for(var t=n.orig[0]instanceof AST_SymbolFunarg&&this.name&&this.name.definition(),a=t?t.mangled_name||t.name:null;;){var s=next_mangled(this,e);if(!a||a!=s)return s}})),AST_Symbol.DEFMETHOD("unmangleable",(function(e){var n=this.definition();return!n||n.unmangleable(e)})),AST_Label.DEFMETHOD("unmangleable",return_false),AST_Symbol.DEFMETHOD("unreferenced",(function(){return!this.definition().references.length&&!this.scope.pinned()})),AST_Symbol.DEFMETHOD("definition",(function(){return this.thedef})),AST_Symbol.DEFMETHOD("global",(function(){return this.thedef.global})),AST_Toplevel.DEFMETHOD("_default_mangler_options",(function(e){return(e=defaults(e,{eval:!1,nth_identifier:base54,ie8:!1,keep_classnames:!1,keep_fnames:!1,module:!1,reserved:[],toplevel:!1})).module&&(e.toplevel=!0),Array.isArray(e.reserved)||e.reserved instanceof Set||(e.reserved=[]),e.reserved=new Set(e.reserved),e.reserved.add("arguments"),e})),AST_Toplevel.DEFMETHOD("mangle_names",(function(e){var n=(e=this._default_mangler_options(e)).nth_identifier,t=-1,a=[];e.keep_fnames&&(function_defs=new Set);const s=this.mangled_names=new Set;unmangleable_names=new Set,e.cache&&(this.globals.forEach(i),e.cache.props&&e.cache.props.forEach((function(e){s.add(e)})));var o=new TreeWalker((function(s,o){if(s instanceof AST_LabeledStatement){var r=t;return o(),t=r,!0}if(s instanceof AST_Scope)s.variables.forEach(i);else if(s.is_block_scope())s.block_scope.variables.forEach(i);else if(function_defs&&s instanceof AST_VarDef&&s.value instanceof AST_Lambda&&!s.value.name&&keep_name(e.keep_fnames,s.name.name))function_defs.add(s.name.definition().id);else{if(s instanceof AST_Label){let e;do{e=n.get(++t)}while(ALL_RESERVED_WORDS.has(e));return s.mangled_name=e,!0}!e.ie8&&!e.safari10&&s instanceof AST_SymbolCatch&&a.push(s.definition())}}));function i(n){1&n.export?unmangleable_names.add(n.name):e.reserved.has(n.name)||a.push(n)}this.walk(o),(e.keep_fnames||e.keep_classnames)&&a.forEach((n=>{n.name.length<6&&n.unmangleable(e)&&unmangleable_names.add(n.name)})),a.forEach((n=>{n.mangle(e)})),function_defs=null,unmangleable_names=null})),AST_Toplevel.DEFMETHOD("find_colliding_names",(function(e){const n=e.cache&&e.cache.props,t=new Set;return e.reserved.forEach(a),this.globals.forEach(s),this.walk(new TreeWalker((function(e){e instanceof AST_Scope&&e.variables.forEach(s),e instanceof AST_SymbolCatch&&s(e.definition())}))),t;function a(e){t.add(e)}function s(t){var s=t.name;if(t.global&&n&&n.has(s))s=n.get(s);else if(!t.unmangleable(e))return;a(s)}})),AST_Toplevel.DEFMETHOD("expand_names",(function(e){var n=(e=this._default_mangler_options(e)).nth_identifier;n.reset&&n.sort&&(n.reset(),n.sort());var t=this.find_colliding_names(e),a=0;function s(s){if(s.global&&e.cache)return;if(s.unmangleable(e))return;if(e.reserved.has(s.name))return;const o=redefined_catch_def(s),i=s.name=o?o.name:function(){var e;do{e=n.get(a++)}while(t.has(e)||ALL_RESERVED_WORDS.has(e));return e}();s.orig.forEach((function(e){e.name=i})),s.references.forEach((function(e){e.name=i}))}this.globals.forEach(s),this.walk(new TreeWalker((function(e){e instanceof AST_Scope&&e.variables.forEach(s),e instanceof AST_SymbolCatch&&s(e.definition())})))})),AST_Node.DEFMETHOD("tail_node",return_this),AST_Sequence.DEFMETHOD("tail_node",(function(){return this.expressions[this.expressions.length-1]})),AST_Toplevel.DEFMETHOD("compute_char_frequency",(function(e){var n=(e=this._default_mangler_options(e)).nth_identifier;if(n.reset&&n.consider&&n.sort){n.reset();try{AST_Node.prototype.print=function(a,s){this._print(a,s),this instanceof AST_Symbol&&!this.unmangleable(e)?n.consider(this.name,-1):e.properties&&(this instanceof AST_DotHash?n.consider("#"+this.property,-1):this instanceof AST_Dot?n.consider(this.property,-1):this instanceof AST_Sub&&t(this.property))},n.consider(this.print_to_string(),1)}finally{AST_Node.prototype.print=AST_Node.prototype._print}n.sort()}function t(e){e instanceof AST_String?n.consider(e.value,-1):e instanceof AST_Conditional?(t(e.consequent),t(e.alternative)):e instanceof AST_Sequence&&t(e.tail_node())}}));const base54=(()=>{const e="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_".split(""),n="0123456789".split("");let t,a;function s(){a=new Map,e.forEach((function(e){a.set(e,0)})),n.forEach((function(e){a.set(e,0)}))}function o(e,n){return a.get(n)-a.get(e)}function i(){t=mergeSort(e,o).concat(mergeSort(n,o))}return s(),i(),{get:function(e){var n="",a=54;e++;do{e--,n+=t[e%a],e=Math.floor(e/a),a=64}while(e>0);return n},consider:function(e,n){for(var t=e.length;--t>=0;)a.set(e[t],a.get(e[t])+n)},reset:s,sort:i}})();export{base54,SymbolDef};