import{AST_Accessor,AST_Array,AST_Assign,AST_Await,AST_Binary,AST_Block,AST_Call,AST_Case,AST_Chain,AST_Class,AST_ClassExpression,AST_Conditional,AST_Default,AST_Defun,AST_Destructuring,AST_Do,AST_Exit,AST_Expansion,AST_For,AST_ForIn,AST_If,AST_LabeledStatement,AST_Lambda,AST_New,AST_Node,AST_Number,AST_ObjectKeyVal,AST_PropAccess,AST_Sequence,AST_SimpleStatement,AST_Symbol,AST_SymbolCatch,AST_SymbolConst,AST_SymbolDefun,AST_SymbolFunarg,AST_SymbolLambda,AST_SymbolRef,AST_This,AST_Toplevel,AST_Try,AST_Unary,AST_UnaryPrefix,AST_Undefined,AST_VarDef,AST_While,AST_Yield,walk,walk_body,_INLINE,_NOINLINE,_PURE}from"../ast.js";import{HOP,make_node,noop}from"../utils/index.js";import{lazy_op,is_modified}from"./inference.js";import{INLINED,clear_flag}from"./compressor-flags.js";import{read_property,has_break_or_continue,is_recursive_ref}from"./common.js";function def_reduce_vars(e,i){e.DEFMETHOD("reduce_vars",i)}function reset_def(e,i){i.assignments=0,i.chained=!1,i.direct_access=!1,i.escaped=0,i.recursive_refs=0,i.references=[],i.single_use=void 0,i.scope.pinned()?i.fixed=!1:i.orig[0]instanceof AST_SymbolConst||!e.exposed(i)?i.fixed=i.init:i.fixed=!1}function reset_variables(e,i,s){s.variables.forEach((function(s){reset_def(i,s),null===s.fixed?(e.defs_to_safe_ids.set(s.id,e.safe_ids),mark(e,s,!0)):s.fixed&&(e.loop_ids.set(s.id,e.in_loop),mark(e,s,!0))}))}function reset_block_variables(e,i){i.block_scope&&i.block_scope.variables.forEach((i=>{reset_def(e,i)}))}function push(e){e.safe_ids=Object.create(e.safe_ids)}function pop(e){e.safe_ids=Object.getPrototypeOf(e.safe_ids)}function mark(e,i,s){e.safe_ids[i.id]=s}function safe_to_read(e,i){if("m"==i.single_use)return!1;if(e.safe_ids[i.id]){if(null==i.fixed){var s=i.orig[0];if(s instanceof AST_SymbolFunarg||"arguments"==s.name)return!1;i.fixed=make_node(AST_Undefined,s)}return!0}return i.fixed instanceof AST_Defun}function safe_to_assign(e,i,s,n){if(void 0===i.fixed)return!0;let o;return null===i.fixed&&(o=e.defs_to_safe_ids.get(i.id))?(o[i.id]=!1,e.defs_to_safe_ids.delete(i.id),!0):!!HOP(e.safe_ids,i.id)&&(!!safe_to_read(e,i)&&(!1!==i.fixed&&(!(null!=i.fixed&&(!n||i.references.length>i.assignments))&&(i.fixed instanceof AST_Defun?n instanceof AST_Node&&i.fixed.parent_scope===s:i.orig.every((e=>!(e instanceof AST_SymbolConst||e instanceof AST_SymbolDefun||e instanceof AST_SymbolLambda)))))))}function ref_once(e,i,s){return i.option("unused")&&!s.scope.pinned()&&s.references.length-s.recursive_refs==1&&e.loop_ids.get(s.id)===e.in_loop}function is_immutable(e){return!!e&&(e.is_constant()||e instanceof AST_Lambda||e instanceof AST_This)}function mark_escaped(e,i,s,n,o,r=0,t=1){var a=e.parent(r);if(o){if(o.is_constant())return;if(o instanceof AST_ClassExpression)return}if(a instanceof AST_Assign&&("="===a.operator||a.logical)&&n===a.right||a instanceof AST_Call&&(n!==a.expression||a instanceof AST_New)||a instanceof AST_Exit&&n===a.value&&n.scope!==i.scope||a instanceof AST_VarDef&&n===a.value||a instanceof AST_Yield&&n===a.value&&n.scope!==i.scope)return!(t>1)||o&&o.is_constant_expression(s)||(t=1),void((!i.escaped||i.escaped>t)&&(i.escaped=t));if(a instanceof AST_Array||a instanceof AST_Await||a instanceof AST_Binary&&lazy_op.has(a.operator)||a instanceof AST_Conditional&&n!==a.condition||a instanceof AST_Expansion||a instanceof AST_Sequence&&n===a.tail_node())mark_escaped(e,i,s,a,a,r+1,t);else if(a instanceof AST_ObjectKeyVal&&n===a.value){var _=e.parent(r+1);mark_escaped(e,i,s,_,_,r+2,t)}else if(a instanceof AST_PropAccess&&n===a.expression&&(mark_escaped(e,i,s,a,o=read_property(o,a.property),r+1,t+1),o))return;r>0||a instanceof AST_Sequence&&n!==a.tail_node()||a instanceof AST_SimpleStatement||(i.direct_access=!0)}def_reduce_vars(AST_Node,noop);const suppress=e=>walk(e,(e=>{if(e instanceof AST_Symbol){var i=e.definition();i&&(e instanceof AST_SymbolRef&&i.references.push(e),i.fixed=!1)}}));function mark_lambda(e,i,s){return clear_flag(this,INLINED),push(e),reset_variables(e,s,this),this.uses_arguments?(i(),void pop(e)):(!this.name&&(n=e.parent())instanceof AST_Call&&n.expression===this&&!n.args.some((e=>e instanceof AST_Expansion))&&this.argnames.every((e=>e instanceof AST_Symbol))&&this.argnames.forEach(((i,s)=>{if(i.definition){var o=i.definition();o.orig.length>1||(void 0!==o.fixed||this.uses_arguments&&!e.has_directive("use strict")?o.fixed=!1:(o.fixed=function(){return n.args[s]||make_node(AST_Undefined,n)},e.loop_ids.set(o.id,e.in_loop),mark(e,o,!0)))}})),i(),pop(e),!0);var n}def_reduce_vars(AST_Accessor,(function(e,i,s){return push(e),reset_variables(e,s,this),i(),pop(e),!0})),def_reduce_vars(AST_Assign,(function(e,i,s){var n=this;if(n.left instanceof AST_Destructuring)return void suppress(n.left);const o=()=>{if(n.logical)return n.left.walk(e),push(e),n.right.walk(e),pop(e),!0};var r=n.left;if(!(r instanceof AST_SymbolRef))return o();var t=r.definition(),a=safe_to_assign(e,t,r.scope,n.right);if(t.assignments++,!a)return o();var _=t.fixed;if(!_&&"="!=n.operator&&!n.logical)return o();var f="="==n.operator,c=f?n.right:n;return is_modified(s,e,n,c,0)?o():(t.references.push(r),n.logical||(f||(t.chained=!0),t.fixed=f?function(){return n.right}:function(){return make_node(AST_Binary,n,{operator:n.operator.slice(0,-1),left:_ instanceof AST_Node?_:_(),right:n.right})}),n.logical?(mark(e,t,!1),push(e),n.right.walk(e),pop(e),!0):(mark(e,t,!1),n.right.walk(e),mark(e,t,!0),mark_escaped(e,t,r.scope,n,c,0,1),!0))})),def_reduce_vars(AST_Binary,(function(e){if(lazy_op.has(this.operator))return this.left.walk(e),push(e),this.right.walk(e),pop(e),!0})),def_reduce_vars(AST_Block,(function(e,i,s){reset_block_variables(s,this)})),def_reduce_vars(AST_Case,(function(e){return push(e),this.expression.walk(e),pop(e),push(e),walk_body(this,e),pop(e),!0})),def_reduce_vars(AST_Class,(function(e,i){return clear_flag(this,INLINED),push(e),i(),pop(e),!0})),def_reduce_vars(AST_Conditional,(function(e){return this.condition.walk(e),push(e),this.consequent.walk(e),pop(e),push(e),this.alternative.walk(e),pop(e),!0})),def_reduce_vars(AST_Chain,(function(e,i){const s=e.safe_ids;return i(),e.safe_ids=s,!0})),def_reduce_vars(AST_Call,(function(e){this.expression.walk(e),this.optional&&push(e);for(const i of this.args)i.walk(e);return!0})),def_reduce_vars(AST_PropAccess,(function(e){if(this.optional)return this.expression.walk(e),push(e),this.property instanceof AST_Node&&this.property.walk(e),!0})),def_reduce_vars(AST_Default,(function(e,i){return push(e),i(),pop(e),!0})),def_reduce_vars(AST_Lambda,mark_lambda),def_reduce_vars(AST_Do,(function(e,i,s){reset_block_variables(s,this);const n=e.in_loop;return e.in_loop=this,push(e),this.body.walk(e),has_break_or_continue(this)&&(pop(e),push(e)),this.condition.walk(e),pop(e),e.in_loop=n,!0})),def_reduce_vars(AST_For,(function(e,i,s){reset_block_variables(s,this),this.init&&this.init.walk(e);const n=e.in_loop;return e.in_loop=this,push(e),this.condition&&this.condition.walk(e),this.body.walk(e),this.step&&(has_break_or_continue(this)&&(pop(e),push(e)),this.step.walk(e)),pop(e),e.in_loop=n,!0})),def_reduce_vars(AST_ForIn,(function(e,i,s){reset_block_variables(s,this),suppress(this.init),this.object.walk(e);const n=e.in_loop;return e.in_loop=this,push(e),this.body.walk(e),pop(e),e.in_loop=n,!0})),def_reduce_vars(AST_If,(function(e){return this.condition.walk(e),push(e),this.body.walk(e),pop(e),this.alternative&&(push(e),this.alternative.walk(e),pop(e)),!0})),def_reduce_vars(AST_LabeledStatement,(function(e){return push(e),this.body.walk(e),pop(e),!0})),def_reduce_vars(AST_SymbolCatch,(function(){this.definition().fixed=!1})),def_reduce_vars(AST_SymbolRef,(function(e,i,s){var n,o=this.definition();o.references.push(this),1==o.references.length&&!o.fixed&&o.orig[0]instanceof AST_SymbolDefun&&e.loop_ids.set(o.id,e.in_loop),void 0!==o.fixed&&safe_to_read(e,o)?o.fixed&&((n=this.fixed_value())instanceof AST_Lambda&&is_recursive_ref(e,o)?o.recursive_refs++:n&&!s.exposed(o)&&ref_once(e,s,o)?o.single_use=n instanceof AST_Lambda&&!n.pinned()||n instanceof AST_Class||o.scope===this.scope&&n.is_constant_expression():o.single_use=!1,is_modified(s,e,this,n,0,is_immutable(n))&&(o.single_use?o.single_use="m":o.fixed=!1)):o.fixed=!1,mark_escaped(e,o,this.scope,this,n,0,1)})),def_reduce_vars(AST_Toplevel,(function(e,i,s){this.globals.forEach((function(e){reset_def(s,e)})),reset_variables(e,s,this)})),def_reduce_vars(AST_Try,(function(e,i,s){return reset_block_variables(s,this),push(e),walk_body(this,e),pop(e),this.bcatch&&(push(e),this.bcatch.walk(e),pop(e)),this.bfinally&&this.bfinally.walk(e),!0})),def_reduce_vars(AST_Unary,(function(e){var i=this;if("++"===i.operator||"--"===i.operator){var s=i.expression;if(s instanceof AST_SymbolRef){var n=s.definition(),o=safe_to_assign(e,n,s.scope,!0);if(n.assignments++,o){var r=n.fixed;if(r)return n.references.push(s),n.chained=!0,n.fixed=function(){return make_node(AST_Binary,i,{operator:i.operator.slice(0,-1),left:make_node(AST_UnaryPrefix,i,{operator:"+",expression:r instanceof AST_Node?r:r()}),right:make_node(AST_Number,i,{value:1})})},mark(e,n,!0),!0}}}})),def_reduce_vars(AST_VarDef,(function(e,i){var s=this;if(s.name instanceof AST_Destructuring)suppress(s.name);else{var n=s.name.definition();if(s.value){if(safe_to_assign(e,n,s.name.scope,s.value))return n.fixed=function(){return s.value},e.loop_ids.set(n.id,e.in_loop),mark(e,n,!1),i(),mark(e,n,!0),!0;n.fixed=!1}}})),def_reduce_vars(AST_While,(function(e,i,s){reset_block_variables(s,this);const n=e.in_loop;return e.in_loop=this,push(e),i(),pop(e),e.in_loop=n,!0}));