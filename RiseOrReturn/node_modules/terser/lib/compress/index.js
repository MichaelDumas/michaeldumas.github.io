import{AST_Accessor,AST_Array,AST_Arrow,AST_Assign,AST_BigInt,AST_Binary,AST_Block,AST_BlockStatement,AST_Boolean,AST_Break,AST_Call,AST_Catch,AST_Chain,AST_Class,AST_ClassExpression,AST_ClassProperty,AST_ConciseMethod,AST_Conditional,AST_Const,AST_Constant,AST_Debugger,AST_Default,AST_DefaultAssign,AST_DefClass,AST_Definitions,AST_Defun,AST_Destructuring,AST_Directive,AST_Do,AST_Dot,AST_DWLoop,AST_EmptyStatement,AST_Exit,AST_Expansion,AST_Export,AST_False,AST_For,AST_ForIn,AST_Function,AST_Hole,AST_If,AST_Import,AST_Infinity,AST_IterationStatement,AST_LabeledStatement,AST_Lambda,AST_Let,AST_NaN,AST_New,AST_Node,AST_Null,AST_Number,AST_Object,AST_ObjectKeyVal,AST_ObjectProperty,AST_PrefixedTemplateString,AST_PropAccess,AST_RegExp,AST_Return,AST_Scope,AST_Sequence,AST_SimpleStatement,AST_Statement,AST_String,AST_Sub,AST_Switch,AST_SwitchBranch,AST_Symbol,AST_SymbolBlockDeclaration,AST_SymbolCatch,AST_SymbolClassProperty,AST_SymbolDeclaration,AST_SymbolDefun,AST_SymbolExport,AST_SymbolFunarg,AST_SymbolLambda,AST_SymbolLet,AST_SymbolMethod,AST_SymbolRef,AST_SymbolVar,AST_TemplateString,AST_This,AST_Toplevel,AST_True,AST_Try,AST_Unary,AST_UnaryPostfix,AST_UnaryPrefix,AST_Undefined,AST_Var,AST_VarDef,AST_While,AST_With,AST_Yield,TreeTransformer,TreeWalker,walk,walk_abort,walk_parent,_INLINE,_NOINLINE,_PURE}from"../ast.js";import{defaults,HOP,keep_name,make_node,makePredicate,map_add,MAP,member,remove,return_false,return_true,regexp_source_fix,has_annotation}from"../utils/index.js";import{first_in_statement}from"../utils/first_in_statement.js";import{equivalent_to}from"../equivalent-to.js";import{is_basic_identifier_string,JS_Parse_Error,parse,PRECEDENCE}from"../parse.js";import{OutputStream}from"../output.js";import{base54,SymbolDef}from"../scope.js";import"../size.js";import"./evaluate.js";import"./drop-side-effect-free.js";import"./reduce-vars.js";import{is_undeclared_ref,lazy_op,is_nullish,is_undefined,is_lhs,aborts}from"./inference.js";import{SQUEEZED,OPTIMIZED,INLINED,CLEAR_BETWEEN_PASSES,TOP,WRITE_ONLY,UNDEFINED,UNUSED,TRUTHY,FALSY,has_flag,set_flag,clear_flag}from"./compressor-flags.js";import{make_sequence,best_of,best_of_expression,make_node_from_constant,merge_sequence,get_simple_key,has_break_or_continue,maintain_this_binding,identifier_atom,is_identifier_atom,is_func_expr,is_ref_of,can_be_evicted_from_block,as_statement_array,is_iife_call,is_recursive_ref}from"./common.js";import{tighten_body,trim_unreachable_code}from"./tighten-body.js";class Compressor extends TreeWalker{constructor(e,{false_by_default:n=!1,mangle_options:t=!1}){super(),void 0===e.defaults||e.defaults||(n=!0),this.options=defaults(e,{arguments:!1,arrows:!n,booleans:!n,booleans_as_integers:!1,collapse_vars:!n,comparisons:!n,computed_props:!n,conditionals:!n,dead_code:!n,defaults:!0,directives:!n,drop_console:!1,drop_debugger:!n,ecma:5,evaluate:!n,expression:!1,global_defs:!1,hoist_funs:!1,hoist_props:!n,hoist_vars:!1,ie8:!1,if_return:!n,inline:!n,join_vars:!n,keep_classnames:!1,keep_fargs:!0,keep_fnames:!1,keep_infinity:!1,loops:!n,module:!1,negate_iife:!n,passes:1,properties:!n,pure_getters:!n&&"strict",pure_funcs:null,reduce_funcs:!n,reduce_vars:!n,sequences:!n,side_effects:!n,switches:!n,top_retain:null,toplevel:!(!e||!e.top_retain),typeofs:!n,unsafe:!1,unsafe_arrows:!1,unsafe_comps:!1,unsafe_Function:!1,unsafe_math:!1,unsafe_symbols:!1,unsafe_methods:!1,unsafe_proto:!1,unsafe_regexp:!1,unsafe_undefined:!1,unused:!n,warnings:!1},!0);var i=this.options.global_defs;if("object"==typeof i)for(var o in i)"@"===o[0]&&HOP(i,o)&&(i[o.slice(1)]=parse(i[o],{expression:!0}));!0===this.options.inline&&(this.options.inline=3);var a=this.options.pure_funcs;this.pure_funcs="function"==typeof a?a:a?function(e){return!a.includes(e.expression.print_to_string())}:return_true;var r=this.options.top_retain;r instanceof RegExp?this.top_retain=function(e){return r.test(e.name)}:"function"==typeof r?this.top_retain=r:r&&("string"==typeof r&&(r=r.split(/,/)),this.top_retain=function(e){return r.includes(e.name)}),this.options.module&&(this.directives["use strict"]=!0,this.options.toplevel=!0);var s=this.options.toplevel;this.toplevel="string"==typeof s?{funcs:/funcs/.test(s),vars:/vars/.test(s)}:{funcs:s,vars:s};var _=this.options.sequences;this.sequences_limit=1==_?800:0|_,this.evaluated_regexps=new Map,this._toplevel=void 0,this.mangle_options=t}option(e){return this.options[e]}exposed(e){if(e.export)return!0;if(e.global)for(var n=0,t=e.orig.length;n<t;n++)if(!this.toplevel[e.orig[n]instanceof AST_SymbolDefun?"funcs":"vars"])return!0;return!1}in_boolean_context(){if(!this.option("booleans"))return!1;for(var e,n=this.self(),t=0;e=this.parent(t);t++){if(e instanceof AST_SimpleStatement||e instanceof AST_Conditional&&e.condition===n||e instanceof AST_DWLoop&&e.condition===n||e instanceof AST_For&&e.condition===n||e instanceof AST_If&&e.condition===n||e instanceof AST_UnaryPrefix&&"!"==e.operator&&e.expression===n)return!0;if(!(e instanceof AST_Binary&&("&&"==e.operator||"||"==e.operator||"??"==e.operator)||e instanceof AST_Conditional||e.tail_node()===n))return!1;n=e}}get_toplevel(){return this._toplevel}compress(e){e=e.resolve_defines(this),this._toplevel=e,this.option("expression")&&this._toplevel.process_expression(!0);for(var n=+this.options.passes||1,t=1/0,i=!1,o=this.mangle_options&&this.mangle_options.nth_identifier||base54,a={ie8:this.option("ie8"),nth_identifier:o},r=0;r<n;r++)if(this._toplevel.figure_out_scope(a),0===r&&this.option("drop_console")&&(this._toplevel=this._toplevel.drop_console()),(r>0||this.option("reduce_vars"))&&this._toplevel.reset_opt_flags(this),this._toplevel=this._toplevel.transform(this),n>1){let e=0;if(walk(this._toplevel,(()=>{e++})),e<t)t=e,i=!1;else{if(i)break;i=!0}}return this.option("expression")&&this._toplevel.process_expression(!1),e=this._toplevel,this._toplevel=void 0,e}before(e,n){if(has_flag(e,SQUEEZED))return e;var t=!1;e instanceof AST_Scope&&(e=(e=e.hoist_properties(this)).hoist_declarations(this),t=!0),n(e,this),n(e,this);var i=e.optimize(this);return t&&i instanceof AST_Scope&&(i.drop_unused(this),n(i,this)),i===e&&set_flag(i,SQUEEZED),i}}function def_optimize(e,n){e.DEFMETHOD("optimize",(function(e){var t=this;if(has_flag(t,OPTIMIZED))return t;if(e.has_directive("use asm"))return t;var i=n(t,e);return set_flag(i,OPTIMIZED),i}))}function find_scope(e){for(let n=0;;n++){const t=e.parent(n);if(t instanceof AST_Toplevel)return t;if(t instanceof AST_Lambda)return t;if(t.block_scope)return t.block_scope}}function find_variable(e,n){for(var t,i=0;(t=e.parent(i++))&&!(t instanceof AST_Scope);)if(t instanceof AST_Catch&&t.argname){t=t.argname.definition().scope;break}return t.find_variable(n)}function is_empty(e){return null===e||(e instanceof AST_EmptyStatement||e instanceof AST_BlockStatement&&0==e.body.length)}def_optimize(AST_Node,(function(e){return e})),AST_Toplevel.DEFMETHOD("drop_console",(function(){return this.transform(new TreeTransformer((function(e){if("Call"==e.TYPE){var n=e.expression;if(n instanceof AST_PropAccess){for(var t=n.expression;t.expression;)t=t.expression;if(is_undeclared_ref(t)&&"console"==t.name)return make_node(AST_Undefined,e)}}})))})),AST_Node.DEFMETHOD("equivalent_to",(function(e){return equivalent_to(this,e)})),AST_Scope.DEFMETHOD("process_expression",(function(e,n){var t=this,i=new TreeTransformer((function(o){if(e&&o instanceof AST_SimpleStatement)return make_node(AST_Return,o,{value:o.body});if(!e&&o instanceof AST_Return){if(n){var a=o.value&&o.value.drop_side_effect_free(n,!0);return a?make_node(AST_SimpleStatement,o,{body:a}):make_node(AST_EmptyStatement,o)}return make_node(AST_SimpleStatement,o,{body:o.value||make_node(AST_UnaryPrefix,o,{operator:"void",expression:make_node(AST_Number,o,{value:0})})})}if(o instanceof AST_Class||o instanceof AST_Lambda&&o!==t)return o;if(o instanceof AST_Block){var r=o.body.length-1;r>=0&&(o.body[r]=o.body[r].transform(i))}else o instanceof AST_If?(o.body=o.body.transform(i),o.alternative&&(o.alternative=o.alternative.transform(i))):o instanceof AST_With&&(o.body=o.body.transform(i));return o}));t.transform(i)})),AST_Toplevel.DEFMETHOD("reset_opt_flags",(function(e){const n=this,t=e.option("reduce_vars"),i=new TreeWalker((function(o,a){if(clear_flag(o,CLEAR_BETWEEN_PASSES),t)return e.top_retain&&o instanceof AST_Defun&&i.parent()===n&&set_flag(o,TOP),o.reduce_vars(i,a,e)}));i.safe_ids=Object.create(null),i.in_loop=null,i.loop_ids=new Map,i.defs_to_safe_ids=new Map,n.walk(i)})),AST_Symbol.DEFMETHOD("fixed_value",(function(){var e=this.thedef.fixed;return!e||e instanceof AST_Node?e:e()})),AST_SymbolRef.DEFMETHOD("is_immutable",(function(){var e=this.definition().orig;return 1==e.length&&e[0]instanceof AST_SymbolLambda}));var global_names=makePredicate("Array Boolean clearInterval clearTimeout console Date decodeURI decodeURIComponent encodeURI encodeURIComponent Error escape eval EvalError Function isFinite isNaN JSON Math Number parseFloat parseInt RangeError ReferenceError RegExp Object setInterval setTimeout String SyntaxError TypeError unescape URIError");AST_SymbolRef.DEFMETHOD("is_declared",(function(e){return!this.definition().undeclared||e.option("unsafe")&&global_names.has(this.name)}));var directives=new Set(["use asm","use strict"]);function can_be_extracted_from_if_block(e){return!(e instanceof AST_Const||e instanceof AST_Let||e instanceof AST_Class)}function opt_AST_Lambda(e,n){return tighten_body(e.body,n),n.option("side_effects")&&1==e.body.length&&e.body[0]===n.has_directive("use strict")&&(e.body.length=0),e}def_optimize(AST_Directive,(function(e,n){return!n.option("directives")||directives.has(e.value)&&n.has_directive(e.value)===e?e:make_node(AST_EmptyStatement,e)})),def_optimize(AST_Debugger,(function(e,n){return n.option("drop_debugger")?make_node(AST_EmptyStatement,e):e})),def_optimize(AST_LabeledStatement,(function(e,n){return e.body instanceof AST_Break&&n.loopcontrol_target(e.body)===e.body?make_node(AST_EmptyStatement,e):0==e.label.references.length?e.body:e})),def_optimize(AST_Block,(function(e,n){return tighten_body(e.body,n),e})),def_optimize(AST_BlockStatement,(function(e,n){switch(tighten_body(e.body,n),e.body.length){case 1:if(!n.has_directive("use strict")&&n.parent()instanceof AST_If&&can_be_extracted_from_if_block(e.body[0])||can_be_evicted_from_block(e.body[0]))return e.body[0];break;case 0:return make_node(AST_EmptyStatement,e)}return e})),def_optimize(AST_Lambda,opt_AST_Lambda);const r_keep_assign=/keep_assign/;function if_break_in_loop(e,n){var t=e.body instanceof AST_BlockStatement?e.body.body[0]:e.body;if(n.option("dead_code")&&o(t)){var i=[];return e.init instanceof AST_Statement?i.push(e.init):e.init&&i.push(make_node(AST_SimpleStatement,e.init,{body:e.init})),e.condition&&i.push(make_node(AST_SimpleStatement,e.condition,{body:e.condition})),trim_unreachable_code(n,e.body,i),make_node(AST_BlockStatement,e,{body:i})}return t instanceof AST_If&&(o(t.body)?(e.condition?e.condition=make_node(AST_Binary,e.condition,{left:e.condition,operator:"&&",right:t.condition.negate(n)}):e.condition=t.condition.negate(n),a(t.alternative)):o(t.alternative)&&(e.condition?e.condition=make_node(AST_Binary,e.condition,{left:e.condition,operator:"&&",right:t.condition}):e.condition=t.condition,a(t.body))),e;function o(e){return e instanceof AST_Break&&n.loopcontrol_target(e)===n.self()}function a(t){t=as_statement_array(t),e.body instanceof AST_BlockStatement?(e.body=e.body.clone(),e.body.body=t.concat(e.body.body.slice(1)),e.body=e.body.transform(n)):e.body=make_node(AST_BlockStatement,e.body,{body:t}).transform(n),e=if_break_in_loop(e,n)}}function retain_top_func(e,n){return n.top_retain&&e instanceof AST_Defun&&has_flag(e,TOP)&&e.name&&n.top_retain(e.name)}AST_Scope.DEFMETHOD("drop_unused",(function(e){if(!e.option("unused"))return;if(e.has_directive("use asm"))return;var n=this;if(n.pinned())return;var t=!(n instanceof AST_Toplevel)||e.toplevel.funcs,i=!(n instanceof AST_Toplevel)||e.toplevel.vars;const o=r_keep_assign.test(e.option("unused"))?return_false:function(e){return e instanceof AST_Assign&&!e.logical&&(has_flag(e,WRITE_ONLY)||"="==e.operator)?e.left:e instanceof AST_Unary&&has_flag(e,WRITE_ONLY)?e.expression:void 0};var a=new Map,r=new Map;n instanceof AST_Toplevel&&e.top_retain&&n.variables.forEach((function(n){e.top_retain(n)&&!a.has(n.id)&&a.set(n.id,n)}));var s=new Map,_=new Map,f=this,l=new TreeWalker((function(o,c){if(o instanceof AST_Lambda&&o.uses_arguments&&!l.has_directive("use strict")&&o.argnames.forEach((function(e){if(e instanceof AST_SymbolDeclaration){var n=e.definition();a.has(n.id)||a.set(n.id,n)}})),o!==n){if(o instanceof AST_Defun||o instanceof AST_DefClass){var u=o.name.definition();if((l.parent()instanceof AST_Export||!t&&f===n)&&u.global&&!a.has(u.id)&&a.set(u.id,u),o instanceof AST_DefClass){o.extends&&(o.extends.has_side_effects(e)||o.extends.may_throw(e))&&o.extends.walk(l);for(const n of o.properties)(n.has_side_effects(e)||n.may_throw(e))&&n.walk(l)}return map_add(_,u.id,o),!0}if(o instanceof AST_SymbolFunarg&&f===n&&map_add(s,o.definition().id,o),o instanceof AST_Definitions&&f===n){const n=l.parent()instanceof AST_Export;return o.definitions.forEach((function(t){if(t.name instanceof AST_SymbolVar&&map_add(s,t.name.definition().id,t),!n&&i||walk(t.name,(e=>{if(e instanceof AST_SymbolDeclaration){const t=e.definition();!n&&!t.global||a.has(t.id)||a.set(t.id,t)}})),t.value){if(t.name instanceof AST_Destructuring)t.walk(l);else{var o=t.name.definition();map_add(_,o.id,t.value),o.chained||t.name.fixed_value()!==t.value||r.set(o.id,t)}t.value.has_side_effects(e)&&t.value.walk(l)}})),!0}return p(o,c)}}));n.walk(l),l=new TreeWalker(p),a.forEach((function(e){var n=_.get(e.id);n&&n.forEach((function(e){e.walk(l)}))}));var c=new TreeTransformer((function(_,l,p){var u=c.parent();if(i){const e=o(_);if(e instanceof AST_SymbolRef){var d=e.definition(),m=a.has(d.id);if(_ instanceof AST_Assign){if(!m||r.has(d.id)&&r.get(d.id)!==_)return maintain_this_binding(u,_,_.right.transform(c))}else if(!m)return p?MAP.skip:make_node(AST_Number,_,{value:0})}}if(f===n){if(_.name&&(_ instanceof AST_ClassExpression&&!keep_name(e.option("keep_classnames"),(d=_.name.definition()).name)||_ instanceof AST_Function&&!keep_name(e.option("keep_fnames"),(d=_.name.definition()).name))&&(!a.has(d.id)||d.orig.length>1)&&(_.name=null),_ instanceof AST_Lambda&&!(_ instanceof AST_Accessor))for(var S=!e.option("keep_fargs"),T=_.argnames,A=T.length;--A>=0;){var g=T[A];g instanceof AST_Expansion&&(g=g.expression),g instanceof AST_DefaultAssign&&(g=g.left),g instanceof AST_Destructuring||a.has(g.definition().id)?S=!1:(set_flag(g,UNUSED),S&&T.pop())}if((_ instanceof AST_Defun||_ instanceof AST_DefClass)&&_!==n){const n=_.name.definition();if(!(n.global&&!t||a.has(n.id))){if(n.eliminated++,_ instanceof AST_DefClass){const n=_.drop_side_effect_free(e);if(n)return make_node(AST_SimpleStatement,_,{body:n})}return p?MAP.skip:make_node(AST_EmptyStatement,_)}}if(_ instanceof AST_Definitions&&!(u instanceof AST_ForIn&&u.init===_)){var h=!(u instanceof AST_Toplevel||_ instanceof AST_Var),v=[],y=[],b=[],k=[];switch(_.definitions.forEach((function(n){n.value&&(n.value=n.value.transform(c));var t=n.name instanceof AST_Destructuring,o=t?new SymbolDef(null,{name:"<destructure>"}):n.name.definition();if(h&&o.global)return b.push(n);if(!i&&!h||t&&(n.name.names.length||n.name.is_array||1!=e.option("pure_getters"))||a.has(o.id)){if(n.value&&r.has(o.id)&&r.get(o.id)!==n&&(n.value=n.value.drop_side_effect_free(e)),n.name instanceof AST_SymbolVar){var f=s.get(o.id);if(f.length>1&&(!n.value||o.orig.indexOf(n.name)>o.eliminated)){if(n.value){var l=make_node(AST_SymbolRef,n.name,n.name);o.references.push(l);var p=make_node(AST_Assign,n,{operator:"=",logical:!1,left:l,right:n.value});r.get(o.id)===n&&r.set(o.id,p),k.push(p.transform(c))}return remove(f,n),void o.eliminated++}}n.value?(k.length>0&&(b.length>0?(k.push(n.value),n.value=make_sequence(n.value,k)):v.push(make_node(AST_SimpleStatement,_,{body:make_sequence(_,k)})),k=[]),b.push(n)):y.push(n)}else if(o.orig[0]instanceof AST_SymbolCatch){(u=n.value&&n.value.drop_side_effect_free(e))&&k.push(u),n.value=null,y.push(n)}else{var u;(u=n.value&&n.value.drop_side_effect_free(e))&&k.push(u),o.eliminated++}})),(y.length>0||b.length>0)&&(_.definitions=y.concat(b),v.push(_)),k.length>0&&v.push(make_node(AST_SimpleStatement,_,{body:make_sequence(_,k)})),v.length){case 0:return p?MAP.skip:make_node(AST_EmptyStatement,_);case 1:return v[0];default:return p?MAP.splice(v):make_node(AST_BlockStatement,_,{body:v})}}if(_ instanceof AST_For)return l(_,this),_.init instanceof AST_BlockStatement&&(x=_.init,_.init=x.body.pop(),x.body.push(_)),_.init instanceof AST_SimpleStatement?_.init=_.init.body:is_empty(_.init)&&(_.init=null),x?p?MAP.splice(x.body):x:_;if(_ instanceof AST_LabeledStatement&&_.body instanceof AST_For){if(l(_,this),_.body instanceof AST_BlockStatement){var x=_.body;return _.body=x.body.pop(),x.body.push(_),p?MAP.splice(x.body):x}return _}if(_ instanceof AST_BlockStatement)return l(_,this),p&&_.body.every(can_be_evicted_from_block)?MAP.splice(_.body):_;if(_ instanceof AST_Scope){const e=f;return f=_,l(_,this),f=e,_}}}));function p(e,t){var i;const s=o(e);if(s instanceof AST_SymbolRef&&!is_ref_of(e.left,AST_SymbolBlockDeclaration)&&n.variables.get(s.name)===(i=s.definition()))return e instanceof AST_Assign&&(e.right.walk(l),i.chained||e.left.fixed_value()!==e.right||r.set(i.id,e)),!0;if(e instanceof AST_SymbolRef){if(i=e.definition(),!a.has(i.id)&&(a.set(i.id,i),i.orig[0]instanceof AST_SymbolCatch)){const e=i.scope.is_block_scope()&&i.scope.get_defun_scope().variables.get(i.name);e&&a.set(e.id,e)}return!0}if(e instanceof AST_Scope){var _=f;return f=e,t(),f=_,!0}}n.transform(c)})),AST_Scope.DEFMETHOD("hoist_declarations",(function(e){var n=this;if(e.has_directive("use asm"))return n;if(!Array.isArray(n.body))return n;var t=e.option("hoist_funs"),i=e.option("hoist_vars");if(t||i){var o=[],a=[],r=new Map,s=0,_=0;walk(n,(e=>e instanceof AST_Scope&&e!==n||(e instanceof AST_Var?(++_,!0):void 0))),i=i&&_>1;var f=new TreeTransformer((function(_){if(_!==n){if(_ instanceof AST_Directive)return o.push(_),make_node(AST_EmptyStatement,_);if(t&&_ instanceof AST_Defun&&!(f.parent()instanceof AST_Export)&&f.parent()===n)return a.push(_),make_node(AST_EmptyStatement,_);if(i&&_ instanceof AST_Var&&!_.definitions.some((e=>e.name instanceof AST_Destructuring))){_.definitions.forEach((function(e){r.set(e.name.name,e),++s}));var l=_.to_assignments(e),c=f.parent();if(c instanceof AST_ForIn&&c.init===_){if(null==l){var p=_.definitions[0].name;return make_node(AST_SymbolRef,p,p)}return l}return c instanceof AST_For&&c.init===_?l:l?make_node(AST_SimpleStatement,_,{body:l}):make_node(AST_EmptyStatement,_)}if(_ instanceof AST_Scope)return _}}));if(n=n.transform(f),s>0){var l=[];const e=n instanceof AST_Lambda,t=e?n.args_as_names():null;if(r.forEach(((n,i)=>{e&&t.some((e=>e.name===n.name.name))?r.delete(i):((n=n.clone()).value=null,l.push(n),r.set(i,n))})),l.length>0){for(;0<n.body.length;){if(n.body[0]instanceof AST_SimpleStatement){var c,p,u=n.body[0].body;if(u instanceof AST_Assign&&"="==u.operator&&(c=u.left)instanceof AST_Symbol&&r.has(c.name)){if((d=r.get(c.name)).value)break;d.value=u.right,remove(l,d),l.push(d),n.body.splice(0,1);continue}if(u instanceof AST_Sequence&&(p=u.expressions[0])instanceof AST_Assign&&"="==p.operator&&(c=p.left)instanceof AST_Symbol&&r.has(c.name)){var d;if((d=r.get(c.name)).value)break;d.value=p.right,remove(l,d),l.push(d),n.body[0].body=make_sequence(u,u.expressions.slice(1));continue}}if(n.body[0]instanceof AST_EmptyStatement)n.body.splice(0,1);else{if(!(n.body[0]instanceof AST_BlockStatement))break;n.body.splice(0,1,...n.body[0].body)}}l=make_node(AST_Var,n,{definitions:l}),a.push(l)}}n.body=o.concat(a,n.body)}return n})),AST_Scope.DEFMETHOD("hoist_properties",(function(e){var n=this;if(!e.option("hoist_props")||e.has_directive("use asm"))return n;var t=n instanceof AST_Toplevel&&e.top_retain||return_false,i=new Map,o=new TreeTransformer((function(a,r){if(a instanceof AST_Definitions&&o.parent()instanceof AST_Export)return a;if(a instanceof AST_VarDef){const s=a.name;let _,f;if(s.scope===n&&1!=(_=s.definition()).escaped&&!_.assignments&&!_.direct_access&&!_.single_use&&!e.exposed(_)&&!t(_)&&(f=s.fixed_value())===a.value&&f instanceof AST_Object&&!f.properties.some((e=>e instanceof AST_Expansion||e.computed_key()))){r(a,this);const e=new Map,t=[];return f.properties.forEach((({key:i,value:r})=>{const _=find_scope(o),f=n.create_symbol(s.CTOR,{source:s,scope:_,conflict_scopes:new Set([_,...s.definition().references.map((e=>e.scope))]),tentative_name:s.name+"_"+i});e.set(String(i),f.definition()),t.push(make_node(AST_VarDef,a,{name:f,value:r}))})),i.set(_.id,e),MAP.splice(t)}}else if(a instanceof AST_PropAccess&&a.expression instanceof AST_SymbolRef){const e=i.get(a.expression.definition().id);if(e){const n=e.get(String(get_simple_key(a.property))),t=make_node(AST_SymbolRef,a,{name:n.name,scope:a.expression.scope,thedef:n});return t.reference({}),t}}}));return n.transform(o)})),def_optimize(AST_SimpleStatement,(function(e,n){if(n.option("side_effects")){var t=e.body,i=t.drop_side_effect_free(n,!0);if(!i)return make_node(AST_EmptyStatement,e);if(i!==t)return make_node(AST_SimpleStatement,e,{body:i})}return e})),def_optimize(AST_While,(function(e,n){return n.option("loops")?make_node(AST_For,e,e).optimize(n):e})),def_optimize(AST_Do,(function(e,n){if(!n.option("loops"))return e;var t=e.condition.tail_node().evaluate(n);if(!(t instanceof AST_Node)){if(t)return make_node(AST_For,e,{body:make_node(AST_BlockStatement,e.body,{body:[e.body,make_node(AST_SimpleStatement,e.condition,{body:e.condition})]})}).optimize(n);if(!has_break_or_continue(e,n.parent()))return make_node(AST_BlockStatement,e.body,{body:[e.body,make_node(AST_SimpleStatement,e.condition,{body:e.condition})]}).optimize(n)}return e})),def_optimize(AST_For,(function(e,n){if(!n.option("loops"))return e;if(n.option("side_effects")&&e.init&&(e.init=e.init.drop_side_effect_free(n)),e.condition){var t=e.condition.evaluate(n);if(!(t instanceof AST_Node))if(t)e.condition=null;else if(!n.option("dead_code")){var i=e.condition;e.condition=make_node_from_constant(t,e.condition),e.condition=best_of_expression(e.condition.transform(n),i)}if(n.option("dead_code")&&(t instanceof AST_Node&&(t=e.condition.tail_node().evaluate(n)),!t)){var o=[];return trim_unreachable_code(n,e.body,o),e.init instanceof AST_Statement?o.push(e.init):e.init&&o.push(make_node(AST_SimpleStatement,e.init,{body:e.init})),o.push(make_node(AST_SimpleStatement,e.condition,{body:e.condition})),make_node(AST_BlockStatement,e,{body:o}).optimize(n)}}return if_break_in_loop(e,n)})),def_optimize(AST_If,(function(e,n){if(is_empty(e.alternative)&&(e.alternative=null),!n.option("conditionals"))return e;var t=e.condition.evaluate(n);if(!(n.option("dead_code")||t instanceof AST_Node)){var i=e.condition;e.condition=make_node_from_constant(t,i),e.condition=best_of_expression(e.condition.transform(n),i)}if(n.option("dead_code")){if(t instanceof AST_Node&&(t=e.condition.tail_node().evaluate(n)),!t){var o=[];return trim_unreachable_code(n,e.body,o),o.push(make_node(AST_SimpleStatement,e.condition,{body:e.condition})),e.alternative&&o.push(e.alternative),make_node(AST_BlockStatement,e,{body:o}).optimize(n)}if(!(t instanceof AST_Node))return(o=[]).push(make_node(AST_SimpleStatement,e.condition,{body:e.condition})),o.push(e.body),e.alternative&&trim_unreachable_code(n,e.alternative,o),make_node(AST_BlockStatement,e,{body:o}).optimize(n)}var a=e.condition.negate(n),r=e.condition.size(),s=a.size(),_=s<r;if(e.alternative&&_){_=!1,e.condition=a;var f=e.body;e.body=e.alternative||make_node(AST_EmptyStatement,e),e.alternative=f}if(is_empty(e.body)&&is_empty(e.alternative))return make_node(AST_SimpleStatement,e.condition,{body:e.condition.clone()}).optimize(n);if(e.body instanceof AST_SimpleStatement&&e.alternative instanceof AST_SimpleStatement)return make_node(AST_SimpleStatement,e,{body:make_node(AST_Conditional,e,{condition:e.condition,consequent:e.body.body,alternative:e.alternative.body})}).optimize(n);if(is_empty(e.alternative)&&e.body instanceof AST_SimpleStatement)return r===s&&!_&&e.condition instanceof AST_Binary&&"||"==e.condition.operator&&(_=!0),_?make_node(AST_SimpleStatement,e,{body:make_node(AST_Binary,e,{operator:"||",left:a,right:e.body.body})}).optimize(n):make_node(AST_SimpleStatement,e,{body:make_node(AST_Binary,e,{operator:"&&",left:e.condition,right:e.body.body})}).optimize(n);if(e.body instanceof AST_EmptyStatement&&e.alternative instanceof AST_SimpleStatement)return make_node(AST_SimpleStatement,e,{body:make_node(AST_Binary,e,{operator:"||",left:e.condition,right:e.alternative.body})}).optimize(n);if(e.body instanceof AST_Exit&&e.alternative instanceof AST_Exit&&e.body.TYPE==e.alternative.TYPE)return make_node(e.body.CTOR,e,{value:make_node(AST_Conditional,e,{condition:e.condition,consequent:e.body.value||make_node(AST_Undefined,e.body),alternative:e.alternative.value||make_node(AST_Undefined,e.alternative)}).transform(n)}).optimize(n);if(e.body instanceof AST_If&&!e.body.alternative&&!e.alternative&&(e=make_node(AST_If,e,{condition:make_node(AST_Binary,e.condition,{operator:"&&",left:e.condition,right:e.body.condition}),body:e.body.body,alternative:null})),aborts(e.body)&&e.alternative){var l=e.alternative;return e.alternative=null,make_node(AST_BlockStatement,e,{body:[e,l]}).optimize(n)}if(aborts(e.alternative)){o=e.body;return e.body=e.alternative,e.condition=_?a:e.condition.negate(n),e.alternative=null,make_node(AST_BlockStatement,e,{body:[e,o]}).optimize(n)}return e})),def_optimize(AST_Switch,(function(e,n){if(!n.option("switches"))return e;var t,i=e.expression.evaluate(n);if(!(i instanceof AST_Node)){var o=e.expression;e.expression=make_node_from_constant(i,o),e.expression=best_of_expression(e.expression.transform(n),o)}if(!n.option("dead_code"))return e;i instanceof AST_Node&&(i=e.expression.tail_node().evaluate(n));for(var a,r,s=[],_=[],f=0,l=e.body.length;f<l&&!r;f++){if((t=e.body[f])instanceof AST_Default)a?d(t,_[_.length-1]):a=t;else if(!(i instanceof AST_Node)){var c=t.expression.evaluate(n);if(!(c instanceof AST_Node)&&c!==i){d(t,_[_.length-1]);continue}if(c instanceof AST_Node&&(c=t.expression.tail_node().evaluate(n)),c===i&&(r=t,a)){var p=_.indexOf(a);_.splice(p,1),d(a,_[p-1]),a=null}}_.push(t)}for(;f<l;)d(e.body[f++],_[_.length-1]);e.body=_;let u=a||r;if(a=null,r=null,_.every(((e,n)=>(e===u||e.expression instanceof AST_Constant)&&(0===e.body.length||aborts(e)||_.length-1===n))))for(let e=0;e<_.length;e++){const n=_[e];for(let t=e+1;t<_.length;t++){const i=_[t];if(0===i.body.length)continue;const o=t===_.length-1,a=m(i,n,!1);if(a||o&&m(i,n,!0)){!a&&o&&i.body.push(make_node(AST_Break));let n=t-1,r=0;for(;n>e&&g(_[n--]);)r++;const s=_.splice(t-r,1+r);_.splice(e+1,0,...s),e+=s.length}}}for(let e=0;e<_.length;e++){let n=_[e];if(0!==n.body.length&&aborts(n))for(let t=e+1;t<_.length;e++,t++){let e=_[t];if(0!==e.body.length){if(!(m(e,n,!1)||t===_.length-1&&m(e,n,!0)))break;n.body=[],n=e}}}{let e=_.length-1;for(;e>=0;e--){let t=_[e].body;if(A(t[t.length-1],n)&&t.pop(),!g(_[e]))break}if(e++,!u||_.indexOf(u)>=e)for(let t=_.length-1;t>=e;t--){let e=_[t];if(e===u)u=null,_.pop();else{if(e.expression.has_side_effects(n))break;_.pop()}}}e:if(u){let e=_.indexOf(u),t=e;for(;t<_.length-1&&g(_[t]);t++);if(t<_.length-1)break e;let i=_.length-1;for(;i>=0;i--){let e=_[i];if(e!==u&&e.expression.has_side_effects(n))break}if(t>i){let n=e-1;for(;n>=0&&g(_[n]);n--);let o=Math.max(i,n)+1,a=e;i>e?(a=i,_[i].body=_[t].body):u.body=_[t].body,_.splice(a+1,t-a),_.splice(o,e-o)}}e:if(u){let t,i=_.findIndex((e=>!g(e)));if(i===_.length-1){let n=_[i];if(T(e))break e;t=make_node(AST_BlockStatement,n,{body:n.body}),n.body=[]}else if(-1!==i)break e;let o=_.find((e=>e!==u&&e.expression.has_side_effects(n)));if(!o)return make_node(AST_BlockStatement,e,{body:s.concat(S(e.expression),u.expression?S(u.expression):[],t||[])}).optimize(n);const a=_.indexOf(u);if(_.splice(a,1),u=null,t)return make_node(AST_BlockStatement,e,{body:s.concat(e,t)}).optimize(n)}if(_.length>0&&(_[0].body=s.concat(_[0].body)),0==_.length)return make_node(AST_BlockStatement,e,{body:s.concat(S(e.expression))}).optimize(n);if(1==_.length&&!T(e)){let t=_[0];return make_node(AST_If,e,{condition:make_node(AST_Binary,e,{operator:"===",left:e.expression,right:t.expression}),body:make_node(AST_BlockStatement,t,{body:t.body}),alternative:null}).optimize(n)}if(2===_.length&&u&&!T(e)){let t=_[0]===u?_[1]:_[0],i=u.expression&&S(u.expression);if(aborts(_[0])){let o=_[0];return A(o.body[o.body.length-1],n)&&o.body.pop(),make_node(AST_If,e,{condition:make_node(AST_Binary,e,{operator:"===",left:e.expression,right:t.expression}),body:make_node(AST_BlockStatement,t,{body:t.body}),alternative:make_node(AST_BlockStatement,u,{body:[].concat(i||[],u.body)})}).optimize(n)}let o="===",a=make_node(AST_BlockStatement,t,{body:t.body}),r=make_node(AST_BlockStatement,u,{body:[].concat(i||[],u.body)});if(_[0]===u){o="!==";let e=r;r=a,a=e}return make_node(AST_BlockStatement,e,{body:[make_node(AST_If,e,{condition:make_node(AST_Binary,e,{operator:o,left:e.expression,right:t.expression}),body:a,alternative:null})].concat(r)}).optimize(n)}return e;function d(e,t){t&&!aborts(t)?t.body=t.body.concat(e.body):trim_unreachable_code(n,e,s)}function m(e,n,t){let i=e.body,o=n.body;if(t&&(i=i.concat(make_node(AST_Break))),i.length!==o.length)return!1;let a=make_node(AST_BlockStatement,e,{body:i}),r=make_node(AST_BlockStatement,n,{body:o});return a.equivalent_to(r)}function S(e){return make_node(AST_SimpleStatement,e,{body:e})}function T(e){let n=!1,t=new TreeWalker((e=>{if(n)return!0;if(e instanceof AST_Lambda)return!0;if(e instanceof AST_SimpleStatement)return!0;if(!A(e,t))return;let i=t.parent();i instanceof AST_SwitchBranch&&i.body[i.body.length-1]===e||(n=!0)}));return e.walk(t),n}function A(n,t){return n instanceof AST_Break&&t.loopcontrol_target(n)===e}function g(e){return!aborts(e)&&!make_node(AST_BlockStatement,e,{body:e.body}).has_side_effects(n)}})),def_optimize(AST_Try,(function(e,n){if(tighten_body(e.body,n),e.bcatch&&e.bfinally&&e.bfinally.body.every(is_empty)&&(e.bfinally=null),n.option("dead_code")&&e.body.every(is_empty)){var t=[];return e.bcatch&&trim_unreachable_code(n,e.bcatch,t),e.bfinally&&t.push(...e.bfinally.body),make_node(AST_BlockStatement,e,{body:t}).optimize(n)}return e})),AST_Definitions.DEFMETHOD("remove_initializers",(function(){var e=[];this.definitions.forEach((function(n){n.name instanceof AST_SymbolDeclaration?(n.value=null,e.push(n)):walk(n.name,(t=>{t instanceof AST_SymbolDeclaration&&e.push(make_node(AST_VarDef,n,{name:t,value:null}))}))})),this.definitions=e})),AST_Definitions.DEFMETHOD("to_assignments",(function(e){var n=e.option("reduce_vars"),t=[];for(const e of this.definitions){if(e.value){var i=make_node(AST_SymbolRef,e.name,e.name);t.push(make_node(AST_Assign,e,{operator:"=",logical:!1,left:i,right:e.value})),n&&(i.definition().fixed=!1)}else if(e.value){var o=make_node(AST_VarDef,e,{name:e.name,value:e.value}),a=make_node(AST_Var,e,{definitions:[o]});t.push(a)}const r=e.name.definition();r.eliminated++,r.replaced--}return 0==t.length?null:make_sequence(this,t)})),def_optimize(AST_Definitions,(function(e){return 0==e.definitions.length?make_node(AST_EmptyStatement,e):e})),def_optimize(AST_VarDef,(function(e,n){return e.name instanceof AST_SymbolLet&&null!=e.value&&is_undefined(e.value,n)&&(e.value=null),e})),def_optimize(AST_Import,(function(e){return e})),def_optimize(AST_Call,(function(e,n){var t=e.expression,i=t;inline_array_like_spread(e.args);var o=e.args.every((e=>!(e instanceof AST_Expansion)));if(n.option("reduce_vars")&&i instanceof AST_SymbolRef&&!has_annotation(e,_NOINLINE)){const e=i.fixed_value();retain_top_func(e,n)||(i=e)}var a=i instanceof AST_Lambda;if(a&&i.pinned())return e;if(n.option("unused")&&o&&a&&!i.uses_arguments){for(var r=0,s=0,_=0,f=e.args.length;_<f;_++){if(i.argnames[_]instanceof AST_Expansion){if(has_flag(i.argnames[_].expression,UNUSED))for(;_<f;){(A=e.args[_++].drop_side_effect_free(n))&&(e.args[r++]=A)}else for(;_<f;)e.args[r++]=e.args[_++];s=r;break}var l=_>=i.argnames.length;if(l||has_flag(i.argnames[_],UNUSED)){if(A=e.args[_].drop_side_effect_free(n))e.args[r++]=A;else if(!l){e.args[r++]=make_node(AST_Number,e.args[_],{value:0});continue}}else e.args[r++]=e.args[_];s=r}e.args.length=s}if(n.option("unsafe")){if(t instanceof AST_Dot&&"Array"===t.start.value&&"from"===t.property&&1===e.args.length){const[t]=e.args;if(t instanceof AST_Array)return make_node(AST_Array,t,{elements:t.elements}).optimize(n)}if(is_undeclared_ref(t))switch(t.name){case"Array":if(1!=e.args.length)return make_node(AST_Array,e,{elements:e.args}).optimize(n);if(e.args[0]instanceof AST_Number&&e.args[0].value<=11){const n=[];for(let t=0;t<e.args[0].value;t++)n.push(new AST_Hole);return new AST_Array({elements:n})}break;case"Object":if(0==e.args.length)return make_node(AST_Object,e,{properties:[]});break;case"String":if(0==e.args.length)return make_node(AST_String,e,{value:""});if(e.args.length<=1)return make_node(AST_Binary,e,{left:e.args[0],operator:"+",right:make_node(AST_String,e,{value:""})}).optimize(n);break;case"Number":if(0==e.args.length)return make_node(AST_Number,e,{value:0});if(1==e.args.length&&n.option("unsafe_math"))return make_node(AST_UnaryPrefix,e,{expression:e.args[0],operator:"+"}).optimize(n);break;case"Symbol":1==e.args.length&&e.args[0]instanceof AST_String&&n.option("unsafe_symbols")&&(e.args.length=0);break;case"Boolean":if(0==e.args.length)return make_node(AST_False,e);if(1==e.args.length)return make_node(AST_UnaryPrefix,e,{expression:make_node(AST_UnaryPrefix,e,{expression:e.args[0],operator:"!"}),operator:"!"}).optimize(n);break;case"RegExp":var c=[];if(e.args.length>=1&&e.args.length<=2&&e.args.every((e=>{var t=e.evaluate(n);return c.push(t),e!==t}))){let[t,i]=c;t=regexp_source_fix(new RegExp(t).source);const o=make_node(AST_RegExp,e,{value:{source:t,flags:i}});if(o._eval(n)!==o)return o}}else if(t instanceof AST_Dot)switch(t.property){case"toString":if(0==e.args.length&&!t.expression.may_throw_on_access(n))return make_node(AST_Binary,e,{left:make_node(AST_String,e,{value:""}),operator:"+",right:t.expression}).optimize(n);break;case"join":if(t.expression instanceof AST_Array)e:{var p;if(!(e.args.length>0&&(p=e.args[0].evaluate(n))===e.args[0])){var u,d=[],m=[];for(_=0,f=t.expression.elements.length;_<f;_++){var S=t.expression.elements[_];if(S instanceof AST_Expansion)break e;var T=S.evaluate(n);T!==S?m.push(T):(m.length>0&&(d.push(make_node(AST_String,e,{value:m.join(p)})),m.length=0),d.push(S))}return m.length>0&&d.push(make_node(AST_String,e,{value:m.join(p)})),0==d.length?make_node(AST_String,e,{value:""}):1==d.length?d[0].is_string(n)?d[0]:make_node(AST_Binary,d[0],{operator:"+",left:make_node(AST_String,e,{value:""}),right:d[0]}):""==p?(u=d[0].is_string(n)||d[1].is_string(n)?d.shift():make_node(AST_String,e,{value:""}),d.reduce((function(e,n){return make_node(AST_Binary,n,{operator:"+",left:e,right:n})}),u).optimize(n)):((A=e.clone()).expression=A.expression.clone(),A.expression.expression=A.expression.expression.clone(),A.expression.expression.elements=d,best_of(n,e,A));var A}}break;case"charAt":if(t.expression.is_string(n)){var g=e.args[0],h=g?g.evaluate(n):0;if(h!==g)return make_node(AST_Sub,t,{expression:t.expression,property:make_node_from_constant(0|h,g||t)}).optimize(n)}break;case"apply":if(2==e.args.length&&e.args[1]instanceof AST_Array)return(P=e.args[1].elements.slice()).unshift(e.args[0]),make_node(AST_Call,e,{expression:make_node(AST_Dot,t,{expression:t.expression,optional:!1,property:"call"}),args:P}).optimize(n);break;case"call":var v=t.expression;if(v instanceof AST_SymbolRef&&(v=v.fixed_value()),v instanceof AST_Lambda&&!v.contains_this())return(e.args.length?make_sequence(this,[e.args[0],make_node(AST_Call,e,{expression:t.expression,args:e.args.slice(1)})]):make_node(AST_Call,e,{expression:t.expression,args:[]})).optimize(n)}}if(n.option("unsafe_Function")&&is_undeclared_ref(t)&&"Function"==t.name){if(0==e.args.length)return make_node(AST_Function,e,{argnames:[],body:[]}).optimize(n);var y=n.mangle_options&&n.mangle_options.nth_identifier||base54;if(e.args.every((e=>e instanceof AST_String)))try{var b="n(function("+e.args.slice(0,-1).map((function(e){return e.value})).join(",")+"){"+e.args[e.args.length-1].value+"})",k=parse(b),x={ie8:n.option("ie8"),nth_identifier:y};k.figure_out_scope(x);var E,z=new Compressor(n.options,{mangle_options:n.mangle_options});(k=k.transform(z)).figure_out_scope(x),k.compute_char_frequency(x),k.mangle_names(x),walk(k,(e=>{if(is_func_expr(e))return E=e,walk_abort}));b=OutputStream();return AST_BlockStatement.prototype._codegen.call(E,E,b),e.args=[make_node(AST_String,e,{value:E.argnames.map((function(e){return e.print_to_string()})).join(",")}),make_node(AST_String,e.args[e.args.length-1],{value:b.get().replace(/^{|}$/g,"")})],e}catch(e){if(!(e instanceof JS_Parse_Error))throw e}}var D=a&&i.body[0],B=a&&!i.is_generator&&!i.async,N=B&&n.option("inline")&&!e.is_callee_pure(n);if(N&&D instanceof AST_Return){let t=D.value;if(!t||t.is_constant_expression()){t=t?t.clone(!0):make_node(AST_Undefined,e);const i=e.args.concat(t);return make_sequence(e,i).optimize(n)}if(1===i.argnames.length&&i.argnames[0]instanceof AST_SymbolFunarg&&e.args.length<2&&t instanceof AST_SymbolRef&&t.name===i.argnames[0].name){const t=(e.args[0]||make_node(AST_Undefined)).optimize(n);let i;return t instanceof AST_PropAccess&&(i=n.parent())instanceof AST_Call&&i.expression===e?make_sequence(e,[make_node(AST_Number,e,{value:0}),t]):t}}if(N){var C,q,w=-1;let a,r,s;if(o&&!i.uses_arguments&&!(n.parent()instanceof AST_Class)&&!(i.name&&i instanceof AST_Function)&&(r=function(e){var t=i.body,o=t.length;if(n.option("inline")<3)return 1==o&&U(e);e=null;for(var a=0;a<o;a++){var r=t[a];if(r instanceof AST_Var){if(e&&!r.definitions.every((e=>!e.value)))return!1}else{if(e)return!1;r instanceof AST_EmptyStatement||(e=r)}}return U(e)}(D))&&(t===i||has_annotation(e,_INLINE)||n.option("unused")&&1==(a=t.definition()).references.length&&!is_recursive_ref(n,a)&&i.is_constant_expression(t.scope))&&!has_annotation(e,_PURE|_NOINLINE)&&!i.contains_this()&&function(){var e=new Set;do{if((C=n.parent(++w)).is_block_scope()&&C.block_scope&&C.block_scope.variables.forEach((function(n){e.add(n.name)})),C instanceof AST_Catch)C.argname&&e.add(C.argname.name);else if(C instanceof AST_IterationStatement)q=[];else if(C instanceof AST_SymbolRef&&C.fixed_value()instanceof AST_Scope)return!1}while(!(C instanceof AST_Scope));var t=!(C instanceof AST_Toplevel)||n.toplevel.vars,o=n.option("inline");return!!function(e,n){for(var t=i.body.length,o=0;o<t;o++){var a=i.body[o];if(a instanceof AST_Var){if(!n)return!1;for(var r=a.definitions.length;--r>=0;){var s=a.definitions[r].name;if(s instanceof AST_Destructuring||e.has(s.name)||identifier_atom.has(s.name)||C.conflicting_def(s.name))return!1;q&&q.push(s.definition())}}}return!0}(e,o>=3&&t)&&(!!function(e,n){for(var t=0,o=i.argnames.length;t<o;t++){var a=i.argnames[t];if(a instanceof AST_DefaultAssign){if(has_flag(a.left,UNUSED))continue;return!1}if(a instanceof AST_Destructuring)return!1;if(a instanceof AST_Expansion){if(has_flag(a.expression,UNUSED))continue;return!1}if(!has_flag(a,UNUSED)){if(!n||e.has(a.name)||identifier_atom.has(a.name)||C.conflicting_def(a.name))return!1;q&&q.push(a.definition())}}return!0}(e,o>=2&&t)&&(!q||0==q.length||!is_reachable(i,q)))}()&&(s=find_scope(n))&&!scope_encloses_variables_in_this_scope(s,i)&&!function(){let e,t=0;for(;e=n.parent(t++);){if(e instanceof AST_DefaultAssign)return!0;if(e instanceof AST_Block)break}return!1}()&&!(C instanceof AST_Class))return set_flag(i,SQUEEZED),s.add_child_scope(i),make_sequence(e,function(t){var o=[],a=[];if(function(n,t){for(var o=i.argnames.length,a=e.args.length;--a>=o;)t.push(e.args[a]);for(a=o;--a>=0;){var r=i.argnames[a],s=e.args[a];if(has_flag(r,UNUSED)||!r.name||C.conflicting_def(r.name))s&&t.push(s);else{var _=make_node(AST_SymbolVar,r,r);r.definition().orig.push(_),!s&&q&&(s=make_node(AST_Undefined,e)),O(n,t,_,s)}}n.reverse(),t.reverse()}(o,a),function(e,n){for(var t=n.length,o=0,a=i.body.length;o<a;o++){var r=i.body[o];if(r instanceof AST_Var)for(var s=0,_=r.definitions.length;s<_;s++){var f=r.definitions[s],l=f.name;if(O(e,n,l,f.value),q&&i.argnames.every((e=>e.name!=l.name))){var c=i.variables.get(l.name),p=make_node(AST_SymbolRef,l,l);c.references.push(p),n.splice(t++,0,make_node(AST_Assign,f,{operator:"=",logical:!1,left:p,right:make_node(AST_Undefined,l)}))}}}}(o,a),a.push(t),o.length){const e=C.body.indexOf(n.parent(w-1))+1;C.body.splice(e,0,make_node(AST_Var,i,{definitions:o}))}return a.map((e=>e.clone(!0)))}(r)).optimize(n)}if(N&&has_annotation(e,_INLINE))return set_flag(i,SQUEEZED),(i=(i=make_node(i.CTOR===AST_Defun?AST_Function:i.CTOR,i,i)).clone(!0)).figure_out_scope({},{parent_scope:find_scope(n),toplevel:n.get_toplevel()}),make_node(AST_Call,e,{expression:i,args:e.args}).optimize(n);if(B&&n.option("side_effects")&&i.body.every(is_empty)){var P=e.args.concat(make_node(AST_Undefined,e));return make_sequence(e,P).optimize(n)}if(n.option("negate_iife")&&n.parent()instanceof AST_SimpleStatement&&is_iife_call(e))return e.negate(n,!0);var R=e.evaluate(n);return R!==e?(R=make_node_from_constant(R,e).optimize(n),best_of(n,R,e)):e;function U(n){return n?n instanceof AST_Return?n.value?n.value.clone(!0):make_node(AST_Undefined,e):n instanceof AST_SimpleStatement?make_node(AST_UnaryPrefix,n,{operator:"void",expression:n.body.clone(!0)}):void 0:make_node(AST_Undefined,e)}function O(n,t,i,o){var a=i.definition();C.variables.has(i.name)||(C.variables.set(i.name,a),C.enclosed.push(a),n.push(make_node(AST_VarDef,i,{name:i,value:null})));var r=make_node(AST_SymbolRef,i,i);a.references.push(r),o&&t.push(make_node(AST_Assign,e,{operator:"=",logical:!1,left:r,right:o.clone()}))}})),def_optimize(AST_New,(function(e,n){return n.option("unsafe")&&is_undeclared_ref(e.expression)&&["Object","RegExp","Function","Error","Array"].includes(e.expression.name)?make_node(AST_Call,e,e).transform(n):e})),def_optimize(AST_Sequence,(function(e,n){if(!n.option("side_effects"))return e;var t,i,o=[];t=first_in_statement(n),i=e.expressions.length-1,e.expressions.forEach((function(e,a){a<i&&(e=e.drop_side_effect_free(n,t)),e&&(merge_sequence(o,e),t=!1)}));var a=o.length-1;return function(){for(;a>0&&is_undefined(o[a],n);)a--;a<o.length-1&&(o[a]=make_node(AST_UnaryPrefix,e,{operator:"void",expression:o[a]}),o.length=a+1)}(),0==a?((e=maintain_this_binding(n.parent(),n.self(),o[0]))instanceof AST_Sequence||(e=e.optimize(n)),e):(e.expressions=o,e)})),AST_Unary.DEFMETHOD("lift_sequences",(function(e){if(e.option("sequences")&&this.expression instanceof AST_Sequence){var n=this.expression.expressions.slice(),t=this.clone();return t.expression=n.pop(),n.push(t),make_sequence(this,n).optimize(e)}return this})),def_optimize(AST_UnaryPostfix,(function(e,n){return e.lift_sequences(n)})),def_optimize(AST_UnaryPrefix,(function(e,n){var t=e.expression;if("delete"==e.operator&&!(t instanceof AST_SymbolRef||t instanceof AST_PropAccess||t instanceof AST_Chain||is_identifier_atom(t)))return make_sequence(e,[t,make_node(AST_True,e)]).optimize(n);var i=e.lift_sequences(n);if(i!==e)return i;if(n.option("side_effects")&&"void"==e.operator)return(t=t.drop_side_effect_free(n))?(e.expression=t,e):make_node(AST_Undefined,e).optimize(n);if(n.in_boolean_context())switch(e.operator){case"!":if(t instanceof AST_UnaryPrefix&&"!"==t.operator)return t.expression;t instanceof AST_Binary&&(e=best_of(n,e,t.negate(n,first_in_statement(n))));break;case"typeof":return(t instanceof AST_SymbolRef?make_node(AST_True,e):make_sequence(e,[t,make_node(AST_True,e)])).optimize(n)}if("-"==e.operator&&t instanceof AST_Infinity&&(t=t.transform(n)),t instanceof AST_Binary&&("+"==e.operator||"-"==e.operator)&&("*"==t.operator||"/"==t.operator||"%"==t.operator))return make_node(AST_Binary,e,{operator:t.operator,left:make_node(AST_UnaryPrefix,t.left,{operator:e.operator,expression:t.left}),right:t.right});if("-"!=e.operator||!(t instanceof AST_Number||t instanceof AST_Infinity||t instanceof AST_BigInt)){var o=e.evaluate(n);if(o!==e)return o=make_node_from_constant(o,e).optimize(n),best_of(n,o,e)}return e})),AST_Binary.DEFMETHOD("lift_sequences",(function(e){if(e.option("sequences")){if(this.left instanceof AST_Sequence){var n=this.left.expressions.slice();return(t=this.clone()).left=n.pop(),n.push(t),make_sequence(this,n).optimize(e)}if(this.right instanceof AST_Sequence&&!this.left.has_side_effects(e)){for(var t,i="="==this.operator&&this.left instanceof AST_SymbolRef,o=(n=this.right.expressions).length-1,a=0;a<o&&(i||!n[a].has_side_effects(e));a++);if(a==o)return n=n.slice(),(t=this.clone()).right=n.pop(),n.push(t),make_sequence(this,n).optimize(e);if(a>0)return(t=this.clone()).right=make_sequence(this.right,n.slice(a)),(n=n.slice(0,a)).push(t),make_sequence(this,n).optimize(e)}}return this}));var commutativeOperators=makePredicate("== === != !== * & | ^");function is_object(e){return e instanceof AST_Array||e instanceof AST_Lambda||e instanceof AST_Object||e instanceof AST_Class}function within_array_or_object_literal(e){for(var n,t=0;n=e.parent(t++);){if(n instanceof AST_Statement)return!1;if(n instanceof AST_Array||n instanceof AST_ObjectKeyVal||n instanceof AST_Object)return!0}return!1}function scope_encloses_variables_in_this_scope(e,n){for(const t of n.enclosed){if(n.variables.has(t.name))continue;const i=e.find_variable(t.name);if(i){if(i===t)continue;return!0}}return!1}function is_atomic(e,n){return e instanceof AST_SymbolRef||e.TYPE===n.TYPE}function is_reachable(e,n){const t=e=>{if(e instanceof AST_SymbolRef&&member(e.definition(),n))return walk_abort};return walk_parent(e,((n,i)=>{if(n instanceof AST_Scope&&n!==e){var o=i.parent();if(o instanceof AST_Call&&o.expression===n&&!n.async&&!n.is_generator)return;return!walk(n,t)||walk_abort}}))}def_optimize(AST_Binary,(function(e,n){function t(){return e.left.is_constant()||e.right.is_constant()||!e.left.has_side_effects(n)&&!e.right.has_side_effects(n)}function i(n){if(t()){n&&(e.operator=n);var i=e.left;e.left=e.right,e.right=i}}if(commutativeOperators.has(e.operator)&&e.right.is_constant()&&!e.left.is_constant()&&(e.left instanceof AST_Binary&&PRECEDENCE[e.left.operator]>=PRECEDENCE[e.operator]||i()),e=e.lift_sequences(n),n.option("comparisons"))switch(e.operator){case"===":case"!==":var o=!0;(e.left.is_string(n)&&e.right.is_string(n)||e.left.is_number(n)&&e.right.is_number(n)||e.left.is_boolean()&&e.right.is_boolean()||e.left.equivalent_to(e.right))&&(e.operator=e.operator.substr(0,2));case"==":case"!=":if(!o&&is_undefined(e.left,n))e.left=make_node(AST_Null,e.left);else if(n.option("typeofs")&&e.left instanceof AST_String&&"undefined"==e.left.value&&e.right instanceof AST_UnaryPrefix&&"typeof"==e.right.operator){var a=e.right.expression;(a instanceof AST_SymbolRef?!a.is_declared(n):a instanceof AST_PropAccess&&n.option("ie8"))||(e.right=a,e.left=make_node(AST_Undefined,e.left).optimize(n),2==e.operator.length&&(e.operator+="="))}else if(e.left instanceof AST_SymbolRef&&e.right instanceof AST_SymbolRef&&e.left.definition()===e.right.definition()&&is_object(e.left.fixed_value()))return make_node("="==e.operator[0]?AST_True:AST_False,e);break;case"&&":case"||":var r=e.left;if(r.operator==e.operator&&(r=r.right),r instanceof AST_Binary&&r.operator==("&&"==e.operator?"!==":"===")&&e.right instanceof AST_Binary&&r.operator==e.right.operator&&(is_undefined(r.left,n)&&e.right.left instanceof AST_Null||r.left instanceof AST_Null&&is_undefined(e.right.left,n))&&!r.right.has_side_effects(n)&&r.right.equivalent_to(e.right.right)){var s=make_node(AST_Binary,e,{operator:r.operator.slice(0,-1),left:make_node(AST_Null,e),right:r.right});return r!==e.left&&(s=make_node(AST_Binary,e,{operator:e.operator,left:e.left.left,right:s})),s}}if("+"==e.operator&&n.in_boolean_context()){var _=e.left.evaluate(n),f=e.right.evaluate(n);if(_&&"string"==typeof _)return make_sequence(e,[e.right,make_node(AST_True,e)]).optimize(n);if(f&&"string"==typeof f)return make_sequence(e,[e.left,make_node(AST_True,e)]).optimize(n)}if(n.option("comparisons")&&e.is_boolean()){if(!(n.parent()instanceof AST_Binary)||n.parent()instanceof AST_Assign){var l=make_node(AST_UnaryPrefix,e,{operator:"!",expression:e.negate(n,first_in_statement(n))});e=best_of(n,e,l)}if(n.option("unsafe_comps"))switch(e.operator){case"<":i(">");break;case"<=":i(">=")}}if("+"==e.operator){if(e.right instanceof AST_String&&""==e.right.getValue()&&e.left.is_string(n))return e.left;if(e.left instanceof AST_String&&""==e.left.getValue()&&e.right.is_string(n))return e.right;if(e.left instanceof AST_Binary&&"+"==e.left.operator&&e.left.left instanceof AST_String&&""==e.left.left.getValue()&&e.right.is_string(n))return e.left=e.left.right,e}if(n.option("evaluate")){switch(e.operator){case"&&":if(!(_=!!has_flag(e.left,TRUTHY)||!has_flag(e.left,FALSY)&&e.left.evaluate(n)))return maintain_this_binding(n.parent(),n.self(),e.left).optimize(n);if(!(_ instanceof AST_Node))return make_sequence(e,[e.left,e.right]).optimize(n);if(f=e.right.evaluate(n)){if(!(f instanceof AST_Node)){if("&&"==(c=n.parent()).operator&&c.left===n.self()||n.in_boolean_context())return e.left.optimize(n)}}else{if(n.in_boolean_context())return make_sequence(e,[e.left,make_node(AST_False,e)]).optimize(n);set_flag(e,FALSY)}if("||"==e.left.operator)if(!(p=e.left.right.evaluate(n)))return make_node(AST_Conditional,e,{condition:e.left.left,consequent:e.right,alternative:e.left.right}).optimize(n);break;case"||":var c,p;if(!(_=!!has_flag(e.left,TRUTHY)||!has_flag(e.left,FALSY)&&e.left.evaluate(n)))return make_sequence(e,[e.left,e.right]).optimize(n);if(!(_ instanceof AST_Node))return maintain_this_binding(n.parent(),n.self(),e.left).optimize(n);if(f=e.right.evaluate(n)){if(!(f instanceof AST_Node)){if(n.in_boolean_context())return make_sequence(e,[e.left,make_node(AST_True,e)]).optimize(n);set_flag(e,TRUTHY)}}else if("||"==(c=n.parent()).operator&&c.left===n.self()||n.in_boolean_context())return e.left.optimize(n);if("&&"==e.left.operator)if((p=e.left.right.evaluate(n))&&!(p instanceof AST_Node))return make_node(AST_Conditional,e,{condition:e.left.left,consequent:e.left.right,alternative:e.right}).optimize(n);break;case"??":if(is_nullish(e.left,n))return e.right;if(!((_=e.left.evaluate(n))instanceof AST_Node))return null==_?e.right:e.left;if(n.in_boolean_context()){const t=e.right.evaluate(n);if(!(t instanceof AST_Node||t))return e.left}}var u=!0;switch(e.operator){case"+":if(e.right instanceof AST_Constant&&e.left instanceof AST_Binary&&"+"==e.left.operator&&e.left.is_string(n)){var d=(m=make_node(AST_Binary,e,{operator:"+",left:e.left.right,right:e.right})).optimize(n);m!==d&&(e=make_node(AST_Binary,e,{operator:"+",left:e.left.left,right:d}))}if(e.left instanceof AST_Binary&&"+"==e.left.operator&&e.left.is_string(n)&&e.right instanceof AST_Binary&&"+"==e.right.operator&&e.right.is_string(n)){var m,S=(m=make_node(AST_Binary,e,{operator:"+",left:e.left.right,right:e.right.left})).optimize(n);m!==S&&(e=make_node(AST_Binary,e,{operator:"+",left:make_node(AST_Binary,e.left,{operator:"+",left:e.left.left,right:S}),right:e.right.right}))}if(e.right instanceof AST_UnaryPrefix&&"-"==e.right.operator&&e.left.is_number(n)){e=make_node(AST_Binary,e,{operator:"-",left:e.left,right:e.right.expression});break}if(e.left instanceof AST_UnaryPrefix&&"-"==e.left.operator&&t()&&e.right.is_number(n)){e=make_node(AST_Binary,e,{operator:"-",left:e.right,right:e.left.expression});break}if(e.left instanceof AST_TemplateString){var T=e.left;if((d=e.right.evaluate(n))!=e.right)return T.segments[T.segments.length-1].value+=String(d),T}if(e.right instanceof AST_TemplateString){d=e.right;if((T=e.left.evaluate(n))!=e.left)return d.segments[0].value=String(T)+d.segments[0].value,d}if(e.left instanceof AST_TemplateString&&e.right instanceof AST_TemplateString){var A=(T=e.left).segments;d=e.right;A[A.length-1].value+=d.segments[0].value;for(var g=1;g<d.segments.length;g++)A.push(d.segments[g]);return T}case"*":u=n.option("unsafe_math");case"&":case"|":case"^":if(e.left.is_number(n)&&e.right.is_number(n)&&t()&&!(e.left instanceof AST_Binary&&e.left.operator!=e.operator&&PRECEDENCE[e.left.operator]>=PRECEDENCE[e.operator])){var h=make_node(AST_Binary,e,{operator:e.operator,left:e.right,right:e.left});e=e.right instanceof AST_Constant&&!(e.left instanceof AST_Constant)?best_of(n,h,e):best_of(n,e,h)}u&&e.is_number(n)&&(e.right instanceof AST_Binary&&e.right.operator==e.operator&&(e=make_node(AST_Binary,e,{operator:e.operator,left:make_node(AST_Binary,e.left,{operator:e.operator,left:e.left,right:e.right.left,start:e.left.start,end:e.right.left.end}),right:e.right.right})),e.right instanceof AST_Constant&&e.left instanceof AST_Binary&&e.left.operator==e.operator&&(e.left.left instanceof AST_Constant?e=make_node(AST_Binary,e,{operator:e.operator,left:make_node(AST_Binary,e.left,{operator:e.operator,left:e.left.left,right:e.right,start:e.left.left.start,end:e.right.end}),right:e.left.right}):e.left.right instanceof AST_Constant&&(e=make_node(AST_Binary,e,{operator:e.operator,left:make_node(AST_Binary,e.left,{operator:e.operator,left:e.left.right,right:e.right,start:e.left.right.start,end:e.right.end}),right:e.left.left}))),e.left instanceof AST_Binary&&e.left.operator==e.operator&&e.left.right instanceof AST_Constant&&e.right instanceof AST_Binary&&e.right.operator==e.operator&&e.right.left instanceof AST_Constant&&(e=make_node(AST_Binary,e,{operator:e.operator,left:make_node(AST_Binary,e.left,{operator:e.operator,left:make_node(AST_Binary,e.left.left,{operator:e.operator,left:e.left.right,right:e.right.left,start:e.left.right.start,end:e.right.left.end}),right:e.left.left}),right:e.right.right})))}}if(e.right instanceof AST_Binary&&e.right.operator==e.operator&&(lazy_op.has(e.operator)||"+"==e.operator&&(e.right.left.is_string(n)||e.left.is_string(n)&&e.right.right.is_string(n))))return e.left=make_node(AST_Binary,e.left,{operator:e.operator,left:e.left.transform(n),right:e.right.left.transform(n)}),e.right=e.right.right.transform(n),e.transform(n);var v=e.evaluate(n);return v!==e?(v=make_node_from_constant(v,e).optimize(n),best_of(n,v,e)):e})),def_optimize(AST_SymbolExport,(function(e){return e})),def_optimize(AST_SymbolRef,(function(e,n){if(!n.option("ie8")&&is_undeclared_ref(e)&&!n.find_parent(AST_With))switch(e.name){case"undefined":return make_node(AST_Undefined,e).optimize(n);case"NaN":return make_node(AST_NaN,e).optimize(n);case"Infinity":return make_node(AST_Infinity,e).optimize(n)}const t=n.parent();if(n.option("reduce_vars")&&is_lhs(e,t)!==e){const a=e.definition(),r=find_scope(n);if(n.top_retain&&a.global&&n.top_retain(a))return a.fixed=!1,a.single_use=!1,e;let s=e.fixed_value(),_=a.single_use&&!(t instanceof AST_Call&&t.is_callee_pure(n)||has_annotation(t,_NOINLINE))&&!(t instanceof AST_Export&&s instanceof AST_Lambda&&s.name);if(_&&s instanceof AST_Node&&(_=!s.has_side_effects(n)&&!s.may_throw(n)),_&&(s instanceof AST_Lambda||s instanceof AST_Class))if(retain_top_func(s,n))_=!1;else if(a.scope===e.scope||1!=a.escaped&&!has_flag(s,INLINED)&&!within_array_or_object_literal(n)&&n.option("reduce_funcs")){if(is_recursive_ref(n,a))_=!1;else if((a.scope!==e.scope||a.orig[0]instanceof AST_SymbolFunarg)&&(_=s.is_constant_expression(e.scope),"f"==_)){var i=e.scope;do{(i instanceof AST_Defun||is_func_expr(i))&&set_flag(i,INLINED)}while(i=i.parent_scope)}}else _=!1;if(_&&s instanceof AST_Lambda&&(_=a.scope===e.scope&&!scope_encloses_variables_in_this_scope(r,s)||t instanceof AST_Call&&t.expression===e&&!scope_encloses_variables_in_this_scope(r,s)&&!(s.name&&s.name.definition().recursive_refs>0)),_&&s){if(s instanceof AST_DefClass&&(set_flag(s,SQUEEZED),s=make_node(AST_ClassExpression,s,s)),s instanceof AST_Defun&&(set_flag(s,SQUEEZED),s=make_node(AST_Function,s,s)),a.recursive_refs>0&&s.name instanceof AST_SymbolDefun){const e=s.name.definition();let n=s.variables.get(s.name.name),t=n&&n.orig[0];t instanceof AST_SymbolLambda||(t=make_node(AST_SymbolLambda,s.name,s.name),t.scope=s,s.name=t,n=s.def_function(t)),walk(s,(t=>{t instanceof AST_SymbolRef&&t.definition()===e&&(t.thedef=n,n.references.push(t))}))}return(s instanceof AST_Lambda||s instanceof AST_Class)&&s.parent_scope!==r&&(s=s.clone(!0,n.get_toplevel()),r.add_child_scope(s)),s.optimize(n)}if(s){let t;if(s instanceof AST_This)a.orig[0]instanceof AST_SymbolFunarg||!a.references.every((e=>a.scope===e.scope))||(t=s);else{var o=s.evaluate(n);o===s||!n.option("unsafe_regexp")&&o instanceof RegExp||(t=make_node_from_constant(o,s))}if(t){const i=e.size(n),o=t.size(n);let r=0;if(n.option("unused")&&!n.exposed(a)&&(r=(i+2+o)/(a.references.length-a.assignments)),o<=i+r)return t}}}return e})),def_optimize(AST_Undefined,(function(e,n){if(n.option("unsafe_undefined")){var t=find_variable(n,"undefined");if(t){var i=make_node(AST_SymbolRef,e,{name:"undefined",scope:t.scope,thedef:t});return set_flag(i,UNDEFINED),i}}var o=is_lhs(n.self(),n.parent());return o&&is_atomic(o,e)?e:make_node(AST_UnaryPrefix,e,{operator:"void",expression:make_node(AST_Number,e,{value:0})})})),def_optimize(AST_Infinity,(function(e,n){var t=is_lhs(n.self(),n.parent());return t&&is_atomic(t,e)?e:!n.option("keep_infinity")||t&&!is_atomic(t,e)||find_variable(n,"Infinity")?make_node(AST_Binary,e,{operator:"/",left:make_node(AST_Number,e,{value:1}),right:make_node(AST_Number,e,{value:0})}):e})),def_optimize(AST_NaN,(function(e,n){var t=is_lhs(n.self(),n.parent());return t&&!is_atomic(t,e)||find_variable(n,"NaN")?make_node(AST_Binary,e,{operator:"/",left:make_node(AST_Number,e,{value:0}),right:make_node(AST_Number,e,{value:0})}):e}));const ASSIGN_OPS=makePredicate("+ - / * % >> << >>> | ^ &"),ASSIGN_OPS_COMMUTATIVE=makePredicate("* | ^ &");function is_nullish_check(e,n,t){if(n.may_throw(t))return!1;let i;if(e instanceof AST_Binary&&"=="===e.operator&&((i=is_nullish(e.left,t)&&e.left)||(i=is_nullish(e.right,t)&&e.right))&&(i===e.left?e.right:e.left).equivalent_to(n))return!0;if(e instanceof AST_Binary&&"||"===e.operator){let i,o;const a=e=>{if(!(e instanceof AST_Binary)||"==="!==e.operator&&"=="!==e.operator)return!1;let a,r=0;return e.left instanceof AST_Null&&(r++,i=e,a=e.right),e.right instanceof AST_Null&&(r++,i=e,a=e.left),is_undefined(e.left,t)&&(r++,o=e,a=e.right),is_undefined(e.right,t)&&(r++,o=e,a=e.left),1===r&&!!a.equivalent_to(n)};if(!a(e.left))return!1;if(!a(e.right))return!1;if(i&&o&&i!==o)return!0}return!1}function safe_to_flatten(e,n){return e instanceof AST_SymbolRef&&(e=e.fixed_value()),!!e&&(!(e instanceof AST_Lambda||e instanceof AST_Class)||(!(e instanceof AST_Lambda&&e.contains_this())||n.parent()instanceof AST_New))}function literals_in_boolean_context(e,n){return n.in_boolean_context()?best_of(n,e,make_sequence(e,[e,make_node(AST_True,e)]).optimize(n)):e}function inline_array_like_spread(e){for(var n=0;n<e.length;n++){var t=e[n];if(t instanceof AST_Expansion){var i=t.expression;i instanceof AST_Array&&!i.elements.some((e=>e instanceof AST_Hole))&&(e.splice(n,1,...i.elements),n--)}}}function inline_object_prop_spread(e,n){for(var t=0;t<e.length;t++){var i=e[t];if(i instanceof AST_Expansion){const o=i.expression;o instanceof AST_Object&&o.properties.every((e=>e instanceof AST_ObjectKeyVal))?(e.splice(t,1,...o.properties),t--):(o instanceof AST_Constant&&!(o instanceof AST_String)||is_nullish(o,n))&&(e.splice(t,1),t--)}}}function lift_key(e,n){if(!n.option("computed_props"))return e;if(!(e.key instanceof AST_Constant))return e;if(e.key instanceof AST_String||e.key instanceof AST_Number){if("__proto__"===e.key.value)return e;if("constructor"==e.key.value&&n.parent()instanceof AST_Class)return e;e instanceof AST_ObjectKeyVal?(e.quote=e.key.quote,e.key=e.key.value):e instanceof AST_ClassProperty?(e.quote=e.key.quote,e.key=make_node(AST_SymbolClassProperty,e.key,{name:e.key.value})):(e.quote=e.key.quote,e.key=make_node(AST_SymbolMethod,e.key,{name:e.key.value}))}return e}def_optimize(AST_Assign,(function(e,n){if(e.logical)return e.lift_sequences(n);var t;if(n.option("dead_code")&&e.left instanceof AST_SymbolRef&&(t=e.left.definition()).scope===n.find_parent(AST_Lambda)){var i,o=0,a=e;do{if(i=a,(a=n.parent(o++))instanceof AST_Exit){if(r(o,a))break;if(is_reachable(t.scope,[t]))break;return"="==e.operator?e.right:(t.fixed=!1,make_node(AST_Binary,e,{operator:e.operator.slice(0,-1),left:e.left,right:e.right}).optimize(n))}}while(a instanceof AST_Binary&&a.right===i||a instanceof AST_Sequence&&a.tail_node()===i)}return"="==(e=e.lift_sequences(n)).operator&&e.left instanceof AST_SymbolRef&&e.right instanceof AST_Binary&&(e.right.left instanceof AST_SymbolRef&&e.right.left.name==e.left.name&&ASSIGN_OPS.has(e.right.operator)?(e.operator=e.right.operator+"=",e.right=e.right.right):e.right.right instanceof AST_SymbolRef&&e.right.right.name==e.left.name&&ASSIGN_OPS_COMMUTATIVE.has(e.right.operator)&&!e.right.left.has_side_effects(n)&&(e.operator=e.right.operator+"=",e.right=e.right.left)),e;function r(t,i){var o=e.right;e.right=make_node(AST_Null,o);var a=i.may_throw(n);e.right=o;for(var r,s=e.left.definition().scope;(r=n.parent(t++))!==s;)if(r instanceof AST_Try){if(r.bfinally)return!0;if(a&&r.bcatch)return!0}}})),def_optimize(AST_DefaultAssign,(function(e,n){if(!n.option("evaluate"))return e;var t=e.right.evaluate(n);return void 0===t?e=e.left:t!==e.right&&(t=make_node_from_constant(t,e.right),e.right=best_of_expression(t,e.right)),e})),def_optimize(AST_Conditional,(function(e,n){if(!n.option("conditionals"))return e;if(e.condition instanceof AST_Sequence){var t=e.condition.expressions.slice();return e.condition=t.pop(),t.push(e),make_sequence(e,t)}var i=e.condition.evaluate(n);if(i!==e.condition)return maintain_this_binding(n.parent(),n.self(),i?e.consequent:e.alternative);var o=i.negate(n,first_in_statement(n));best_of(n,i,o)===o&&(e=make_node(AST_Conditional,e,{condition:o,consequent:e.alternative,alternative:e.consequent}));var a,r=e.condition,s=e.consequent,_=e.alternative;if(r instanceof AST_SymbolRef&&s instanceof AST_SymbolRef&&r.definition()===s.definition())return make_node(AST_Binary,e,{operator:"||",left:r,right:_});if(s instanceof AST_Assign&&_ instanceof AST_Assign&&s.operator===_.operator&&s.logical===_.logical&&s.left.equivalent_to(_.left)&&(!e.condition.has_side_effects(n)||"="==s.operator&&!s.left.has_side_effects(n)))return make_node(AST_Assign,e,{operator:s.operator,left:s.left,logical:s.logical,right:make_node(AST_Conditional,e,{condition:e.condition,consequent:s.right,alternative:_.right})});if(s instanceof AST_Call&&_.TYPE===s.TYPE&&s.args.length>0&&s.args.length==_.args.length&&s.expression.equivalent_to(_.expression)&&!e.condition.has_side_effects(n)&&!s.expression.has_side_effects(n)&&"number"==typeof(a=function(){for(var e=s.args,n=_.args,t=0,i=e.length;t<i;t++){if(e[t]instanceof AST_Expansion)return;if(!e[t].equivalent_to(n[t])){if(n[t]instanceof AST_Expansion)return;for(var o=t+1;o<i;o++){if(e[o]instanceof AST_Expansion)return;if(!e[o].equivalent_to(n[o]))return}return t}}}())){var f=s.clone();return f.args[a]=make_node(AST_Conditional,e,{condition:e.condition,consequent:s.args[a],alternative:_.args[a]}),f}if(_ instanceof AST_Conditional&&s.equivalent_to(_.consequent))return make_node(AST_Conditional,e,{condition:make_node(AST_Binary,e,{operator:"||",left:r,right:_.condition}),consequent:s,alternative:_.alternative}).optimize(n);if(n.option("ecma")>=2020&&is_nullish_check(r,_,n))return make_node(AST_Binary,e,{operator:"??",left:_,right:s}).optimize(n);if(_ instanceof AST_Sequence&&s.equivalent_to(_.expressions[_.expressions.length-1]))return make_sequence(e,[make_node(AST_Binary,e,{operator:"||",left:r,right:make_sequence(e,_.expressions.slice(0,-1))}),s]).optimize(n);if(_ instanceof AST_Binary&&"&&"==_.operator&&s.equivalent_to(_.right))return make_node(AST_Binary,e,{operator:"&&",left:make_node(AST_Binary,e,{operator:"||",left:r,right:_.left}),right:s}).optimize(n);if(s instanceof AST_Conditional&&s.alternative.equivalent_to(_))return make_node(AST_Conditional,e,{condition:make_node(AST_Binary,e,{left:e.condition,operator:"&&",right:s.condition}),consequent:s.consequent,alternative:_});if(s.equivalent_to(_))return make_sequence(e,[e.condition,s]).optimize(n);if(s instanceof AST_Binary&&"||"==s.operator&&s.right.equivalent_to(_))return make_node(AST_Binary,e,{operator:"||",left:make_node(AST_Binary,e,{operator:"&&",left:e.condition,right:s.left}),right:_}).optimize(n);const l=n.in_boolean_context();return p(e.consequent)?u(e.alternative)?c(e.condition):make_node(AST_Binary,e,{operator:"||",left:c(e.condition),right:e.alternative}):u(e.consequent)?p(e.alternative)?c(e.condition.negate(n)):make_node(AST_Binary,e,{operator:"&&",left:c(e.condition.negate(n)),right:e.alternative}):p(e.alternative)?make_node(AST_Binary,e,{operator:"||",left:c(e.condition.negate(n)),right:e.consequent}):u(e.alternative)?make_node(AST_Binary,e,{operator:"&&",left:c(e.condition),right:e.consequent}):e;function c(e){return e.is_boolean()?e:make_node(AST_UnaryPrefix,e,{operator:"!",expression:e.negate(n)})}function p(e){return e instanceof AST_True||l&&e instanceof AST_Constant&&e.getValue()||e instanceof AST_UnaryPrefix&&"!"==e.operator&&e.expression instanceof AST_Constant&&!e.expression.getValue()}function u(e){return e instanceof AST_False||l&&e instanceof AST_Constant&&!e.getValue()||e instanceof AST_UnaryPrefix&&"!"==e.operator&&e.expression instanceof AST_Constant&&e.expression.getValue()}})),def_optimize(AST_Boolean,(function(e,n){if(n.in_boolean_context())return make_node(AST_Number,e,{value:+e.value});var t=n.parent();return n.option("booleans_as_integers")?(t instanceof AST_Binary&&("==="==t.operator||"!=="==t.operator)&&(t.operator=t.operator.replace(/=$/,"")),make_node(AST_Number,e,{value:+e.value})):n.option("booleans")?t instanceof AST_Binary&&("=="==t.operator||"!="==t.operator)?make_node(AST_Number,e,{value:+e.value}):make_node(AST_UnaryPrefix,e,{operator:"!",expression:make_node(AST_Number,e,{value:1-e.value})}):e})),AST_PropAccess.DEFMETHOD("flatten_object",(function(e,n){if(n.option("properties")&&"__proto__"!==e){var t=n.option("unsafe_arrows")&&n.option("ecma")>=2015,i=this.expression;if(i instanceof AST_Object)for(var o=i.properties,a=o.length;--a>=0;){var r=o[a];if(""+(r instanceof AST_ConciseMethod?r.key.name:r.key)==e){if(!o.every((e=>(e instanceof AST_ObjectKeyVal||t&&e instanceof AST_ConciseMethod&&!e.is_generator)&&!e.computed_key())))return;if(!safe_to_flatten(r.value,n))return;return make_node(AST_Sub,this,{expression:make_node(AST_Array,i,{elements:o.map((function(e){var n=e.value;n instanceof AST_Accessor&&(n=make_node(AST_Function,n,n));var t=e.key;return t instanceof AST_Node&&!(t instanceof AST_SymbolMethod)?make_sequence(e,[t,n]):n}))}),property:make_node(AST_Number,this,{value:a})})}}}})),def_optimize(AST_Sub,(function(e,n){var t,i=e.expression,o=e.property;if(n.option("properties")){var a=o.evaluate(n);if(a!==o){if("string"==typeof a)if("undefined"==a)a=void 0;else(v=parseFloat(a)).toString()==a&&(a=v);o=e.property=best_of_expression(o,make_node_from_constant(a,o).transform(n));var r=""+a;if(is_basic_identifier_string(r)&&r.length<=o.size()+1)return make_node(AST_Dot,e,{expression:i,optional:e.optional,property:r,quote:o.quote}).optimize(n)}}e:if(n.option("arguments")&&i instanceof AST_SymbolRef&&"arguments"==i.name&&1==i.definition().orig.length&&(t=i.scope)instanceof AST_Lambda&&t.uses_arguments&&!(t instanceof AST_Arrow)&&o instanceof AST_Number){for(var s=o.getValue(),_=new Set,f=t.argnames,l=0;l<f.length;l++){if(!(f[l]instanceof AST_SymbolFunarg))break e;var c=f[l].name;if(_.has(c))break e;_.add(c)}var p=t.argnames[s];if(p&&n.has_directive("use strict")){var u=p.definition();(!n.option("reduce_vars")||u.assignments||u.orig.length>1)&&(p=null)}else if(!p&&!n.option("keep_fargs")&&s<t.argnames.length+5)for(;s>=t.argnames.length;)p=t.create_symbol(AST_SymbolFunarg,{source:t,scope:t,tentative_name:"argument_"+t.argnames.length}),t.argnames.push(p);if(p){var d=make_node(AST_SymbolRef,e,p);return d.reference({}),clear_flag(p,UNUSED),d}}if(is_lhs(e,n.parent()))return e;if(a!==o){var m=e.flatten_object(r,n);m&&(i=e.expression=m.expression,o=e.property=m.property)}if(n.option("properties")&&n.option("side_effects")&&o instanceof AST_Number&&i instanceof AST_Array){s=o.getValue();var S=i.elements,T=S[s];e:if(safe_to_flatten(T,n)){for(var A=!0,g=[],h=S.length;--h>s;){(v=S[h].drop_side_effect_free(n))&&(g.unshift(v),A&&v.has_side_effects(n)&&(A=!1))}if(T instanceof AST_Expansion)break e;for(T=T instanceof AST_Hole?make_node(AST_Undefined,T):T,A||g.unshift(T);--h>=0;){var v;if((v=S[h])instanceof AST_Expansion)break e;(v=v.drop_side_effect_free(n))?g.unshift(v):s--}return A?(g.push(T),make_sequence(e,g).optimize(n)):make_node(AST_Sub,e,{expression:make_node(AST_Array,i,{elements:g}),property:make_node(AST_Number,o,{value:s})})}}var y=e.evaluate(n);return y!==e?(y=make_node_from_constant(y,e).optimize(n),best_of(n,y,e)):e})),def_optimize(AST_Chain,(function(e,n){if(is_nullish(e.expression,n)){let t=n.parent();return t instanceof AST_UnaryPrefix&&"delete"===t.operator?make_node_from_constant(0,e):make_node(AST_Undefined,e)}return e})),AST_Lambda.DEFMETHOD("contains_this",(function(){return walk(this,(e=>e instanceof AST_This?walk_abort:e!==this&&e instanceof AST_Scope&&!(e instanceof AST_Arrow)||void 0))})),def_optimize(AST_Dot,(function(e,n){const t=n.parent();if(is_lhs(e,t))return e;if(n.option("unsafe_proto")&&e.expression instanceof AST_Dot&&"prototype"==e.expression.property){var i=e.expression.expression;if(is_undeclared_ref(i))switch(i.name){case"Array":e.expression=make_node(AST_Array,e.expression,{elements:[]});break;case"Function":e.expression=make_node(AST_Function,e.expression,{argnames:[],body:[]});break;case"Number":e.expression=make_node(AST_Number,e.expression,{value:0});break;case"Object":e.expression=make_node(AST_Object,e.expression,{properties:[]});break;case"RegExp":e.expression=make_node(AST_RegExp,e.expression,{value:{source:"t",flags:""}});break;case"String":e.expression=make_node(AST_String,e.expression,{value:""})}}if(!(t instanceof AST_Call&&has_annotation(t,_NOINLINE))){const t=e.flatten_object(e.property,n);if(t)return t.optimize(n)}let o=e.evaluate(n);return o!==e?(o=make_node_from_constant(o,e).optimize(n),best_of(n,o,e)):e})),def_optimize(AST_Array,(function(e,n){var t=literals_in_boolean_context(e,n);return t!==e?t:(inline_array_like_spread(e.elements),e)})),def_optimize(AST_Object,(function(e,n){var t=literals_in_boolean_context(e,n);return t!==e?t:(inline_object_prop_spread(e.properties,n),e)})),def_optimize(AST_RegExp,literals_in_boolean_context),def_optimize(AST_Return,(function(e,n){return e.value&&is_undefined(e.value,n)&&(e.value=null),e})),def_optimize(AST_Arrow,opt_AST_Lambda),def_optimize(AST_Function,(function(e,n){if(e=opt_AST_Lambda(e,n),n.option("unsafe_arrows")&&n.option("ecma")>=2015&&!e.name&&!e.is_generator&&!e.uses_arguments&&!e.pinned()){if(!walk(e,(e=>{if(e instanceof AST_This)return walk_abort})))return make_node(AST_Arrow,e,e).optimize(n)}return e})),def_optimize(AST_Class,(function(e){return e})),def_optimize(AST_Yield,(function(e,n){return e.expression&&!e.is_star&&is_undefined(e.expression,n)&&(e.expression=null),e})),def_optimize(AST_TemplateString,(function(e,n){if(!n.option("evaluate")||n.parent()instanceof AST_PrefixedTemplateString)return e;for(var t=[],i=0;i<e.segments.length;i++){var o=e.segments[i];if(o instanceof AST_Node){var a=o.evaluate(n);if(a!==o&&(a+"").length<=o.size()+"${}".length){t[t.length-1].value=t[t.length-1].value+a+e.segments[++i].value;continue}if(o instanceof AST_TemplateString){var r=o.segments;t[t.length-1].value+=r[0].value;for(var s=1;s<r.length;s++)o=r[s],t.push(o);continue}}t.push(o)}if(e.segments=t,1==t.length)return make_node(AST_String,e,t[0]);if(3===t.length&&t[1]instanceof AST_Node&&(t[1].is_string(n)||t[1].is_number(n)||is_nullish(t[1],n)||n.option("unsafe"))){if(""===t[2].value)return make_node(AST_Binary,e,{operator:"+",left:make_node(AST_String,e,{value:t[0].value}),right:t[1]});if(""===t[0].value)return make_node(AST_Binary,e,{operator:"+",left:t[1],right:make_node(AST_String,e,{value:t[2].value})})}return e})),def_optimize(AST_PrefixedTemplateString,(function(e){return e})),def_optimize(AST_ObjectProperty,lift_key),def_optimize(AST_ConciseMethod,(function(e,n){if(lift_key(e,n),n.option("arrows")&&n.parent()instanceof AST_Object&&!e.is_generator&&!e.value.uses_arguments&&!e.value.pinned()&&1==e.value.body.length&&e.value.body[0]instanceof AST_Return&&e.value.body[0].value&&!e.value.contains_this()){var t=make_node(AST_Arrow,e.value,e.value);return t.async=e.async,t.is_generator=e.is_generator,make_node(AST_ObjectKeyVal,e,{key:e.key instanceof AST_SymbolMethod?e.key.name:e.key,value:t,quote:e.quote})}return e})),def_optimize(AST_ObjectKeyVal,(function(e,n){lift_key(e,n);var t=n.option("unsafe_methods");if(t&&n.option("ecma")>=2015&&(!(t instanceof RegExp)||t.test(e.key+""))){var i=e.key,o=e.value;if((o instanceof AST_Arrow&&Array.isArray(o.body)&&!o.contains_this()||o instanceof AST_Function)&&!o.name)return make_node(AST_ConciseMethod,e,{async:o.async,is_generator:o.is_generator,key:i instanceof AST_Node?i:make_node(AST_SymbolMethod,e,{name:i}),value:make_node(AST_Accessor,o,o),quote:e.quote})}return e})),def_optimize(AST_Destructuring,(function(e,n){if(1==n.option("pure_getters")&&n.option("unused")&&!e.is_array&&Array.isArray(e.names)&&!function(e){for(var n=[/^VarDef$/,/^(Const|Let|Var)$/,/^Export$/],t=0,i=0,o=n.length;t<o;i++){var a=e.parent(i);if(!a)return!1;if(0!==t||"Destructuring"!=a.TYPE){if(!n[t].test(a.TYPE))return!1;t++}}return!0}(n)&&!(e.names[e.names.length-1]instanceof AST_Expansion)){for(var t=[],i=0;i<e.names.length;i++){var o=e.names[i];o instanceof AST_ObjectKeyVal&&"string"==typeof o.key&&o.value instanceof AST_SymbolDeclaration&&!a(n,o.value.definition())||t.push(o)}t.length!=e.names.length&&(e.names=t)}return e;function a(e,n){return!!n.references.length||!!n.global&&(!e.toplevel.vars||!!e.top_retain&&e.top_retain(n))}}));export{Compressor};