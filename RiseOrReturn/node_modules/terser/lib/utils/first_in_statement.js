import{AST_Binary,AST_Conditional,AST_Dot,AST_Object,AST_Sequence,AST_Statement,AST_Sub,AST_UnaryPostfix,AST_PrefixedTemplateString}from"../ast.js";function first_in_statement(e){let t=e.parent(-1);for(let n,i=0;n=e.parent(i);i++){if(n instanceof AST_Statement&&n.body===t)return!0;if(!(n instanceof AST_Sequence&&n.expressions[0]===t||"Call"===n.TYPE&&n.expression===t||n instanceof AST_PrefixedTemplateString&&n.prefix===t||n instanceof AST_Dot&&n.expression===t||n instanceof AST_Sub&&n.expression===t||n instanceof AST_Conditional&&n.condition===t||n instanceof AST_Binary&&n.left===t||n instanceof AST_UnaryPostfix&&n.expression===t))return!1;t=n}}function left_is_object(e){return e instanceof AST_Object||(e instanceof AST_Sequence?left_is_object(e.expressions[0]):"Call"===e.TYPE?left_is_object(e.expression):e instanceof AST_PrefixedTemplateString?left_is_object(e.prefix):e instanceof AST_Dot||e instanceof AST_Sub?left_is_object(e.expression):e instanceof AST_Conditional?left_is_object(e.condition):e instanceof AST_Binary?left_is_object(e.left):e instanceof AST_UnaryPostfix&&left_is_object(e.expression))}export{first_in_statement,left_is_object};