const SourceMapGenerator=require("./source-map-generator").SourceMapGenerator,util=require("./util"),REGEX_NEWLINE=/(\r?\n)/,NEWLINE_CODE=10,isSourceNode="$$$isSourceNode$$$";class SourceNode{constructor(e,n,t,r,o){this.children=[],this.sourceContents={},this.line=null==e?null:e,this.column=null==n?null:n,this.source=null==t?null:t,this.name=null==o?null:o,this[isSourceNode]=!0,null!=r&&this.add(r)}static fromStringWithSourceMap(e,n,t){const r=new SourceNode,o=e.split(REGEX_NEWLINE);let l=0;const i=function(){return e()+(e()||"");function e(){return l<o.length?o[l++]:void 0}};let u,s=1,c=0,h=null;return n.eachMapping((function(e){if(null!==h){if(!(s<e.generatedLine)){u=o[l]||"";const n=u.substr(0,e.generatedColumn-c);return o[l]=u.substr(e.generatedColumn-c),c=e.generatedColumn,a(h,n),void(h=e)}a(h,i()),s++,c=0}for(;s<e.generatedLine;)r.add(i()),s++;c<e.generatedColumn&&(u=o[l]||"",r.add(u.substr(0,e.generatedColumn)),o[l]=u.substr(e.generatedColumn),c=e.generatedColumn),h=e}),this),l<o.length&&(h&&a(h,i()),r.add(o.splice(l).join(""))),n.sources.forEach((function(e){const o=n.sourceContentFor(e);null!=o&&(null!=t&&(e=util.join(t,e)),r.setSourceContent(e,o))})),r;function a(e,n){if(null===e||void 0===e.source)r.add(n);else{const o=t?util.join(t,e.source):e.source;r.add(new SourceNode(e.originalLine,e.originalColumn,o,n,e.name))}}}add(e){if(Array.isArray(e))e.forEach((function(e){this.add(e)}),this);else{if(!e[isSourceNode]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);e&&this.children.push(e)}return this}prepend(e){if(Array.isArray(e))for(let n=e.length-1;n>=0;n--)this.prepend(e[n]);else{if(!e[isSourceNode]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);this.children.unshift(e)}return this}walk(e){let n;for(let t=0,r=this.children.length;t<r;t++)n=this.children[t],n[isSourceNode]?n.walk(e):""!==n&&e(n,{source:this.source,line:this.line,column:this.column,name:this.name})}join(e){let n,t;const r=this.children.length;if(r>0){for(n=[],t=0;t<r-1;t++)n.push(this.children[t]),n.push(e);n.push(this.children[t]),this.children=n}return this}replaceRight(e,n){const t=this.children[this.children.length-1];return t[isSourceNode]?t.replaceRight(e,n):"string"==typeof t?this.children[this.children.length-1]=t.replace(e,n):this.children.push("".replace(e,n)),this}setSourceContent(e,n){this.sourceContents[util.toSetString(e)]=n}walkSourceContents(e){for(let n=0,t=this.children.length;n<t;n++)this.children[n][isSourceNode]&&this.children[n].walkSourceContents(e);const n=Object.keys(this.sourceContents);for(let t=0,r=n.length;t<r;t++)e(util.fromSetString(n[t]),this.sourceContents[n[t]])}toString(){let e="";return this.walk((function(n){e+=n})),e}toStringWithSourceMap(e){const n={code:"",line:1,column:0},t=new SourceMapGenerator(e);let r=!1,o=null,l=null,i=null,u=null;return this.walk((function(e,s){n.code+=e,null!==s.source&&null!==s.line&&null!==s.column?(o===s.source&&l===s.line&&i===s.column&&u===s.name||t.addMapping({source:s.source,original:{line:s.line,column:s.column},generated:{line:n.line,column:n.column},name:s.name}),o=s.source,l=s.line,i=s.column,u=s.name,r=!0):r&&(t.addMapping({generated:{line:n.line,column:n.column}}),o=null,r=!1);for(let l=0,i=e.length;l<i;l++)10===e.charCodeAt(l)?(n.line++,n.column=0,l+1===i?(o=null,r=!1):r&&t.addMapping({source:s.source,original:{line:s.line,column:s.column},generated:{line:n.line,column:n.column},name:s.name})):n.column++})),this.walkSourceContents((function(e,n){t.setSourceContent(e,n)})),{code:n.code,map:t}}}exports.SourceNode=SourceNode;