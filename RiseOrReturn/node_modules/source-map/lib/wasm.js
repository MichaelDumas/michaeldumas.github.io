const readWasm=require("../lib/read-wasm");function Mapping(){this.generatedLine=0,this.generatedColumn=0,this.lastGeneratedColumn=null,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}let cachedWasm=null;module.exports=function(){if(cachedWasm)return cachedWasm;const n=[];return cachedWasm=readWasm().then((e=>WebAssembly.instantiate(e,{env:{mapping_callback(e,o,t,a,l,i,s,_,r,c){const m=new Mapping;m.generatedLine=e+1,m.generatedColumn=o,t&&(m.lastGeneratedColumn=a-1),l&&(m.source=i,m.originalLine=s+1,m.originalColumn=_,r&&(m.name=c)),n[n.length-1](m)},start_all_generated_locations_for(){console.time("all_generated_locations_for")},end_all_generated_locations_for(){console.timeEnd("all_generated_locations_for")},start_compute_column_spans(){console.time("compute_column_spans")},end_compute_column_spans(){console.timeEnd("compute_column_spans")},start_generated_location_for(){console.time("generated_location_for")},end_generated_location_for(){console.timeEnd("generated_location_for")},start_original_location_for(){console.time("original_location_for")},end_original_location_for(){console.timeEnd("original_location_for")},start_parse_mappings(){console.time("parse_mappings")},end_parse_mappings(){console.timeEnd("parse_mappings")},start_sort_by_generated_location(){console.time("sort_by_generated_location")},end_sort_by_generated_location(){console.timeEnd("sort_by_generated_location")},start_sort_by_original_location(){console.time("sort_by_original_location")},end_sort_by_original_location(){console.timeEnd("sort_by_original_location")}}}))).then((e=>({exports:e.instance.exports,withMappingCallback:(e,o)=>{n.push(e);try{o()}finally{n.pop()}}}))).then(null,(n=>{throw cachedWasm=null,n})),cachedWasm};