import State from"../../../lib/State.js";import GameStateName from"../../enums/GameStateName.js";import ImageName from"../../enums/ImageName.js";import SoundName from"../../enums/SoundName.js";import HighScoreTracker from"../../../lib/HighScoreTracker.js";import{CANVAS_HEIGHT,CANVAS_WIDTH,context,images,keys,sounds,stateMachine,timer}from"../../globals.js";export default class HighScoreState extends State{constructor(){super()}enter(t){this.highScores=HighScoreTracker.loadHighScores()}update(t){keys.Enter&&(keys.Enter=!1,sounds.play(SoundName.Select),stateMachine.change(GameStateName.Transition,{fromState:this,toState:stateMachine.states[GameStateName.TitleScreen]}))}render(){images.render(ImageName.Background,0,0,CANVAS_WIDTH,CANVAS_HEIGHT),context.save(),context.fillStyle="white",context.font="25px Joystix",context.textAlign="center",context.fillText("HIGH SCORES",.5*CANVAS_WIDTH,.15*CANVAS_HEIGHT),context.font="15px Joystix",context.textAlign="left",context.fillText("RANK",.25*CANVAS_WIDTH,80),context.textAlign="center",context.fillText("NAME",.5*CANVAS_WIDTH,80),context.textAlign="right",context.fillText("FLOOR",.75*CANVAS_WIDTH,80);for(let t=0;t<5;t++){const e=this.highScores[t].name??"---",o=this.highScores[t].score??"---";context.textAlign="left",context.fillText(`${t+1}.`,.25*CANVAS_WIDTH,105+15*t),context.textAlign="center",context.fillText(`${e}`,.5*CANVAS_WIDTH,105+15*t),context.textAlign="right",context.fillText(`${o}`,.75*CANVAS_WIDTH,105+15*t)}context.restore()}}