import Animation from"../../../../lib/Animation.js";import{didSucceedChance,getRandomPositiveInteger,pickRandomElement}from"../../../../lib/RandomNumberHelpers.js";import State from"../../../../lib/State.js";import Enemy from"../../../entities/enemies/Enemy.js";import Direction from"../../../enums/Direction.js";import EnemyStateName from"../../../enums/EnemyStateName.js";import{timer}from"../../../globals.js";import Room from"../../../objects/Room.js";export default class EnemyFollowState extends State{constructor(i,e,t){super(),this.enemy=i,this.animation=e,this.player=t}enter(){this.enemy.currentAnimation=this.animation[this.enemy.direction]}update(i){this.move(i)}move(i){this.player.hitbox.position.y>this.enemy.hitbox.position.y&&(this.enemy.position.y+=this.enemy.speed*i,this.enemy.direction=Direction.Down),this.player.hitbox.position.x>this.enemy.hitbox.position.x&&(this.enemy.position.x+=this.enemy.speed*i,this.enemy.direction=Direction.Right),this.player.hitbox.position.y<this.enemy.hitbox.position.y&&(this.enemy.position.y-=this.enemy.speed*i,this.enemy.direction=Direction.Up),this.player.hitbox.position.x<this.enemy.hitbox.position.x&&(this.enemy.position.x-=this.enemy.speed*i,this.enemy.direction=Direction.Left),this.enemy.currentAnimation=this.animation[this.enemy.direction]}}