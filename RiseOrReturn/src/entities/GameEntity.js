import Hitbox from"../../lib/Hitbox.js";import Vector from"../../lib/Vector.js";import Direction from"../enums/Direction.js";import{context,DEBUG}from"../globals.js";export default class GameEntity{constructor(t={}){this.position=t.position??new Vector,this.dimensions=t.dimensions??new Vector,this.speed=t.speed??1,this.totalHealth=t.health??1,this.damage=t.damage??1,this.hitboxOffsets=t.hitboxOffsets??new Hitbox,this.hitbox=new Hitbox(this.position.x+this.hitboxOffsets.position.x,this.position.y+this.hitboxOffsets.position.y,this.dimensions.x+this.hitboxOffsets.dimensions.x,this.dimensions.y+this.hitboxOffsets.dimensions.y),this.health=this.totalHealth,this.stateMachine=null,this.currentAnimation=null,this.sprites=[],this.direction=Direction.Down,this.isDead=!1,this.cleanUp=!1,this.renderPriority=0}update(t){this.stateMachine.update(t),this.currentAnimation.update(t),this.hitbox.set(this.position.x+this.hitboxOffsets.position.x,this.position.y+this.hitboxOffsets.position.y,this.dimensions.x+this.hitboxOffsets.dimensions.x,this.dimensions.y+this.hitboxOffsets.dimensions.y)}render(t={x:0,y:0}){const i=this.position.x+t.x,s=this.position.y+t.y;this.stateMachine.render(),this.sprites[this.currentAnimation.getCurrentFrame()].render(Math.floor(i),Math.floor(s)),DEBUG&&this.hitbox.render(context)}didCollideWithEntity(t){return this.hitbox.didCollide(t)}changeState(t,i){this.stateMachine.change(t,i)}}