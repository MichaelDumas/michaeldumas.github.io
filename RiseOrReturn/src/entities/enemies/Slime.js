import EnemyStateName from"../../enums/EnemyStateName.js";import Enemy from"./Enemy.js";import Direction from"../../enums/Direction.js";import Animation from"../../../lib/Animation.js";import EnemyFactory from"./EnemyFactory.js";import EnemyType from"../../enums/EnemyType.js";import{getRandomPositiveInteger}from"../../../lib/RandomNumberHelpers.js";import{timer}from"../../globals.js";import SoundName from"../../enums/SoundName.js";export default class Slime extends Enemy{static SPEED=10;static INVULNERABLE_DURATION=1;static INVULNERABLE_FLASH_INTERVAL=.1;static BABY_SLIME_OFFSET=10;constructor(i,e){super(i,e),this.room=e,this.alpha=1,this.invulnerabilityTimer=null,this.isBigSlime=!1,this.hitboxOffsets.set(0,6,-2,-6),this.speed=Slime.SPEED,this.sound=SoundName.Slime,2==getRandomPositiveInteger(1,4)&&(this.isBigSlime=!0);const t={[EnemyStateName.Idle]:{[Direction.Up]:new Animation([86],1),[Direction.Down]:new Animation([50],1),[Direction.Left]:new Animation([62],1),[Direction.Right]:new Animation([74],1)},[EnemyStateName.Moving]:{[Direction.Up]:new Animation([84,85,86,85],.2),[Direction.Down]:new Animation([48,49,50,49],.2),[Direction.Left]:new Animation([60,61,62,61],.2),[Direction.Right]:new Animation([72,73,74,73],.2)}};this.stateMachine=this.initializeStateMachine(t,EnemyType.Slime)}spawnBabySlime(i){if(this.isBigSlime){let e=new Slime(this.sprites,this.room),t=new Slime(this.sprites,this.room);e.position.x=this.position.x-Slime.BABY_SLIME_OFFSET,t.position.x=this.position.x+Slime.BABY_SLIME_OFFSET,e.position.y=this.position.y,t.position.y=this.position.y,e.becomeInvulnerable(),t.becomeInvulnerable(),i.push(e),i.push(t)}return i}becomeInvulnerable(){this.isInvulnerable=!0,this.invulnerabilityTimer=this.startInvulnerabilityTimer()}startInvulnerabilityTimer(){const i=Slime.INVULNERABLE_FLASH_INTERVAL,e=Slime.INVULNERABLE_DURATION;return timer.addTask((()=>{this.alpha=1===this.alpha?.5:1}),i,e,(()=>{this.alpha=1,this.isInvulnerable=!1}))}}